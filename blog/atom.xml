<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://seata.io/blog</id>
    <title>Apache Seata Blog</title>
    <updated>2024-01-21T09:58:14.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://seata.io/blog"/>
    <subtitle>Apache Seata Blog</subtitle>
    <icon>https://seata.io/img/seata_logo_small.jpeg</icon>
    <entry>
        <title type="html"><![CDATA[explore-seata-journey]]></title>
        <id>https://seata.io/blog/explore-seata-journey</id>
        <link href="https://seata.io/blog/explore-seata-journey"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[how-to-support-spring-cloud]]></title>
        <id>https://seata.io/blog/how-to-support-spring-cloud</id>
        <link href="https://seata.io/blog/how-to-support-spring-cloud"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[integrate-seata-tcc-mode-with-spring-cloud]]></title>
        <id>https://seata.io/blog/integrate-seata-tcc-mode-with-spring-cloud</id>
        <link href="https://seata.io/blog/integrate-seata-tcc-mode-with-spring-cloud"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[integrate-seata-with-spring-cloud]]></title>
        <id>https://seata.io/blog/integrate-seata-with-spring-cloud</id>
        <link href="https://seata.io/blog/integrate-seata-with-spring-cloud"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[iscas2023]]></title>
        <id>https://seata.io/blog/iscas2023</id>
        <link href="https://seata.io/blog/iscas2023"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-1.5.2]]></title>
        <id>https://seata.io/blog/seata-1.5.2</id>
        <link href="https://seata.io/blog/seata-1.5.2"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-1.6.0]]></title>
        <id>https://seata.io/blog/seata-1.6.0</id>
        <link href="https://seata.io/blog/seata-1.6.0"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-UUID-generator]]></title>
        <id>https://seata.io/blog/seata-analysis-UUID-generator</id>
        <link href="https://seata.io/blog/seata-analysis-UUID-generator"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-config-modular]]></title>
        <id>https://seata.io/blog/seata-analysis-config-modular</id>
        <link href="https://seata.io/blog/seata-analysis-config-modular"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-core-modular]]></title>
        <id>https://seata.io/blog/seata-analysis-core-modular</id>
        <link href="https://seata.io/blog/seata-analysis-core-modular"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-dubbo-transmit-xid]]></title>
        <id>https://seata.io/blog/seata-analysis-dubbo-transmit-xid</id>
        <link href="https://seata.io/blog/seata-analysis-dubbo-transmit-xid"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-go-server]]></title>
        <id>https://seata.io/blog/seata-analysis-go-server</id>
        <link href="https://seata.io/blog/seata-analysis-go-server"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-java-client]]></title>
        <id>https://seata.io/blog/seata-analysis-java-client</id>
        <link href="https://seata.io/blog/seata-analysis-java-client"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-java-server]]></title>
        <id>https://seata.io/blog/seata-analysis-java-server</id>
        <link href="https://seata.io/blog/seata-analysis-java-server"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-simple]]></title>
        <id>https://seata.io/blog/seata-analysis-simple</id>
        <link href="https://seata.io/blog/seata-analysis-simple"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-analysis-tcc-modular]]></title>
        <id>https://seata.io/blog/seata-analysis-tcc-modular</id>
        <link href="https://seata.io/blog/seata-analysis-tcc-modular"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-at-demo-in-mac]]></title>
        <id>https://seata.io/blog/seata-at-demo-in-mac</id>
        <link href="https://seata.io/blog/seata-at-demo-in-mac"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-at-lock]]></title>
        <id>https://seata.io/blog/seata-at-lock</id>
        <link href="https://seata.io/blog/seata-at-lock"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-at-mode-design]]></title>
        <id>https://seata.io/blog/seata-at-mode-design</id>
        <link href="https://seata.io/blog/seata-at-mode-design"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-at-mode-start-rm-tm]]></title>
        <id>https://seata.io/blog/seata-at-mode-start-rm-tm</id>
        <link href="https://seata.io/blog/seata-at-mode-start-rm-tm"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-at-mode-start]]></title>
        <id>https://seata.io/blog/seata-at-mode-start</id>
        <link href="https://seata.io/blog/seata-at-mode-start"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-at-tcc-saga]]></title>
        <id>https://seata.io/blog/seata-at-tcc-saga</id>
        <link href="https://seata.io/blog/seata-at-tcc-saga"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-client-start-analysis-01]]></title>
        <id>https://seata.io/blog/seata-client-start-analysis-01</id>
        <link href="https://seata.io/blog/seata-client-start-analysis-01"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-client-start-analysis-02]]></title>
        <id>https://seata.io/blog/seata-client-start-analysis-02</id>
        <link href="https://seata.io/blog/seata-client-start-analysis-02"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-community-meetup-hangzhou-ready]]></title>
        <id>https://seata.io/blog/seata-community-meetup-hangzhou-ready</id>
        <link href="https://seata.io/blog/seata-community-meetup-hangzhou-ready"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-config-center]]></title>
        <id>https://seata.io/blog/seata-config-center</id>
        <link href="https://seata.io/blog/seata-config-center"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-config-manager]]></title>
        <id>https://seata.io/blog/seata-config-manager</id>
        <link href="https://seata.io/blog/seata-config-manager"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-datasource-proxy]]></title>
        <id>https://seata.io/blog/seata-datasource-proxy</id>
        <link href="https://seata.io/blog/seata-datasource-proxy"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-dsproxy-deadlock]]></title>
        <id>https://seata.io/blog/seata-dsproxy-deadlock</id>
        <link href="https://seata.io/blog/seata-dsproxy-deadlock"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-dynamic-config-and-dynamic-disable]]></title>
        <id>https://seata.io/blog/seata-dynamic-config-and-dynamic-disable</id>
        <link href="https://seata.io/blog/seata-dynamic-config-and-dynamic-disable"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-feature-undo-log-compress]]></title>
        <id>https://seata.io/blog/seata-feature-undo-log-compress</id>
        <link href="https://seata.io/blog/seata-feature-undo-log-compress"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-go-1.2.0]]></title>
        <id>https://seata.io/blog/seata-go-1.2.0</id>
        <link href="https://seata.io/blog/seata-go-1.2.0"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-golang-communication-mode]]></title>
        <id>https://seata.io/blog/seata-golang-communication-mode</id>
        <link href="https://seata.io/blog/seata-golang-communication-mode"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-ha-practice]]></title>
        <id>https://seata.io/blog/seata-ha-practice</id>
        <link href="https://seata.io/blog/seata-ha-practice"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-meetup-hangzhou]]></title>
        <id>https://seata.io/blog/seata-meetup-hangzhou</id>
        <link href="https://seata.io/blog/seata-meetup-hangzhou"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-mybatisplus-analysis]]></title>
        <id>https://seata.io/blog/seata-mybatisplus-analysis</id>
        <link href="https://seata.io/blog/seata-mybatisplus-analysis"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-nacos-analysis]]></title>
        <id>https://seata.io/blog/seata-nacos-analysis</id>
        <link href="https://seata.io/blog/seata-nacos-analysis"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-nacos-docker]]></title>
        <id>https://seata.io/blog/seata-nacos-docker</id>
        <link href="https://seata.io/blog/seata-nacos-docker"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-observable-practice]]></title>
        <id>https://seata.io/blog/seata-observable-practice</id>
        <link href="https://seata.io/blog/seata-observable-practice"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-quick-start]]></title>
        <id>https://seata.io/blog/seata-quick-start</id>
        <link href="https://seata.io/blog/seata-quick-start"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-raft-detailed-explanation]]></title>
        <id>https://seata.io/blog/seata-raft-detailed-explanation</id>
        <link href="https://seata.io/blog/seata-raft-detailed-explanation"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-rpc-refactor]]></title>
        <id>https://seata.io/blog/seata-rpc-refactor</id>
        <link href="https://seata.io/blog/seata-rpc-refactor"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-snowflake-explain]]></title>
        <id>https://seata.io/blog/seata-snowflake-explain</id>
        <link href="https://seata.io/blog/seata-snowflake-explain"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-sourcecode-client-bootstrap]]></title>
        <id>https://seata.io/blog/seata-sourcecode-client-bootstrap</id>
        <link href="https://seata.io/blog/seata-sourcecode-client-bootstrap"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-sourcecode-server-bootstrap]]></title>
        <id>https://seata.io/blog/seata-sourcecode-server-bootstrap</id>
        <link href="https://seata.io/blog/seata-sourcecode-server-bootstrap"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-spring-boot-aop-aspectj]]></title>
        <id>https://seata.io/blog/seata-spring-boot-aop-aspectj</id>
        <link href="https://seata.io/blog/seata-spring-boot-aop-aspectj"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-tcc-fence]]></title>
        <id>https://seata.io/blog/seata-tcc-fence</id>
        <link href="https://seata.io/blog/seata-tcc-fence"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-tcc]]></title>
        <id>https://seata.io/blog/seata-tcc</id>
        <link href="https://seata.io/blog/seata-tcc"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[seata-xa-introduce]]></title>
        <id>https://seata.io/blog/seata-xa-introduce</id>
        <link href="https://seata.io/blog/seata-xa-introduce"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[springboot-dubbo-mybatisplus-seata]]></title>
        <id>https://seata.io/blog/springboot-dubbo-mybatisplus-seata</id>
        <link href="https://seata.io/blog/springboot-dubbo-mybatisplus-seata"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tcc-mode-applicable-scenario-analysis]]></title>
        <id>https://seata.io/blog/tcc-mode-applicable-scenario-analysis</id>
        <link href="https://seata.io/blog/tcc-mode-applicable-scenario-analysis"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tcc-mode-design-principle]]></title>
        <id>https://seata.io/blog/tcc-mode-design-principle</id>
        <link href="https://seata.io/blog/tcc-mode-design-principle"/>
        <updated>2024-01-21T09:58:14.000Z</updated>
        <summary type="html"><![CDATA[Placeholder. DO NOT DELETE.]]></summary>
        <content type="html"><![CDATA[<p>Placeholder. DO NOT DELETE.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Seata:Bridging Data and Applications]]></title>
        <id>https://seata.io/blog/seata-connect-data-and-application</id>
        <link href="https://seata.io/blog/seata-connect-data-and-application"/>
        <updated>2023-06-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article introduces the past, present, and future evolution of Seata.]]></summary>
        <content type="html"><![CDATA[<p>This article mainly introduces the evolutionary journey of distributed transactions from internal development to commercialization and open source, as well as the current progress and future planning of the Seata community.
Seata is an open-source distributed transaction solution designed to provide a comprehensive solution for distributed transactions under modern microservices architecture. Seata offers complete distributed transaction solutions, including AT, TCC, Saga, and XA transaction modes, supporting various programming languages and data storage schemes. Seata also provides easy-to-use APIs, extensive documentation, and examples to facilitate quick development and deployment for enterprises applying Seata.
<strong>Seata's advantages lie in its high availability, high performance, and high scalability, and it does not require extra complex operations for horizontal scaling.</strong> Seata is currently used in thousands of customer business systems on Alibaba Cloud, and its reliability has been recognized and applied by major industry manufacturers.
As an open-source project, the Seata community is also expanding continuously, becoming an important platform for developers to exchange, share, and learn, attracting more and more attention and support from enterprises.
Today, I will primarily share about Seata on the following three topics:</p><ul><li><strong>From TXC/GTS to Seata</strong></li><li><strong>Latest developments in the Seata community</strong></li><li><strong>Future planning for the Seata community</strong><br></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="from-txcgts-to-seata">From TXC/GTS to Seata<a href="#from-txcgts-to-seata" class="hash-link" aria-label="Direct link to From TXC/GTS to Seata" title="Direct link to From TXC/GTS to Seata">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="the-origin-of-distributed-transactions">The Origin of Distributed Transactions<a href="#the-origin-of-distributed-transactions" class="hash-link" aria-label="Direct link to The Origin of Distributed Transactions" title="Direct link to The Origin of Distributed Transactions">​</a></h4><p><img loading="lazy" alt="Product Matrix" src="/assets/images/产品矩阵-911645846cd62c27fb3e2aaef802b52e.jpg" width="1468" height="1316" class="img_ev3q">
Seata is internally codenamed TXC (taobao transaction constructor) within Alibaba, a name with a strong organizational structure flavor. TXC originated from Alibaba's Wushi (Five Color Stones) project, which in ancient mythology were the stones used by the goddess Nüwa to mend the heavens, symbolizing Alibaba's important milestone in the evolution from monolithic architecture to distributed architecture. During this project, a batch of epoch-making Internet middleware was developed, including the well-known "Big Three":</p><ul><li><strong>HSF service invocation framework</strong>
Solves service communication issues after the transition from monolithic applications to service-oriented architectures.</li><li><strong>TDDL database sharding framework</strong>
Addresses storage capacity and connection count issues of databases at scale.</li><li><strong>MetaQ messaging framework</strong>
Addresses asynchronous invocation issues.
The birth of the Big Three satisfied the basic requirements of microservices-based business development, but the data consistency issues that arose after microservices were not properly addressed, lacking a unified solution. The likelihood of data consistency issues in microservices is much higher than in monolithic applications, and the increased complexity of moving from in-process calls to network calls exacerbates the production of exceptional scenarios. The increase in service hops also makes it impossible for upstream and downstream services to coordinate data rollback in the event of a business processing exception. TXC was born to address the pain points of data consistency at the application architecture layer, and the core data consistency scenarios it aimed to address included:</li><li><strong>Consistency across services.</strong> Coordinates rollback of upstream and downstream service nodes in the event of system exceptions such as call timeouts and business exceptions.</li><li><strong>Data consistency in database sharding.</strong> Ensures internal transactions during logical SQL operations on business layers are consistent across different data shards.</li><li><strong>Data consistency in message sending.</strong> Addresses the inconsistency between data operations and successful message sending.
To overcome the common scenarios encountered, TXC was seamlessly integrated with the Big Three. When businesses use the Big Three for development, they are completely unaware of TXC's presence in the background, do not have to consider the design of data consistency, and leave it to the framework to ensure, allowing businesses to focus more on their own development, greatly improving development efficiency.<br>![GTS Architecture](/img/blog/GTS架构.jpg) TXC has been widely used within Alibaba Group for many years and has been baptized by the surging traffic of large-scale events like Singles' Day, significantly improving business development efficiency and ensuring data accuracy, eliminating financial and reputational issues caused by data inconsistencies. With the continuous evolution of the architecture, **a standard three-node cluster can now handle peak values of nearly 100K TPS and millisecond-level transaction processing. In terms of availability and performance, it has reached a four-nines SLA guarantee, ensuring no failures throughout the year even in unattended conditions.**<br></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="the-evolution-of-distributed-transactions">The Evolution of Distributed Transactions<a href="#the-evolution-of-distributed-transactions" class="hash-link" aria-label="Direct link to The Evolution of Distributed Transactions" title="Direct link to The Evolution of Distributed Transactions">​</a></h4><p>The birth of new things is always accompanied by doubts. Is middleware capable of ensuring data consistency reliable? The initial birth of TXC was just a vague theory, lacking theoretical models and engineering practice. After we conducted MVP (Minimum Viable Product) model testing and promoted business deployment, we often encountered faults and frequently had to wake up in the middle of the night to deal with issues, wearing wristbands to sleep to cope with emergency responses. These were the most painful years I went through technically after taking over the team.
<img loading="lazy" alt="Evolution of Distributed Transactions" src="/assets/images/分布式事务演进-cd118286fd5a0add7ecf5775e381a1f5.jpg" width="1488" height="702" class="img_ev3q">
Subsequently, we had extensive discussions and systematic reviews. We first needed to define the consistency problem. Were we to achieve majority consensus consistency like RAFT, solve database consistency issues like Google Spanner, or something else? Looking at the top-down layered structure from the application node, it mainly includes development frameworks, service invocation frameworks, data middleware, database drivers, and databases. We had to decide at which layer to solve the data consistency problem. We compared the consistency requirements, universality, implementation complexity, and business integration costs faced when solving data consistency issues at different levels. In the end, we weighed the pros and cons, decided to keep the implementation complexity to ourselves, and adopted the AT mode initially as a consistency component. We needed to ensure high consistency, but not be locked into specific database implementations, ensuring the generality of scenarios and the business integration costs were low enough to be easily implemented. This is also why TXC initially adopted the AT mode.
<strong>A distributed transaction is not just a framework; it's a system.</strong> We defined the consistency problem in theory, abstractly conceptualized modes, roles, actions, and isolation, etc. From an engineering practice perspective, we defined the programming model, including low-intrusion annotations, simple method templates, and flexible APIs, and defined basic and enhanced transaction capabilities (e.g., how to support a large number of activities at low cost), as well as capabilities in operations, security, performance, observability, and high availability.
<img loading="lazy" alt="Transaction Logical Model" src="/assets/images/事务逻辑模型-bd13bfb9738e5aca63823d268e543280.jpg" width="1482" height="656" class="img_ev3q">
What problems do distributed transactions solve? A classic and tangible example is the money transfer scenario. The transfer process includes subtracting balance and adding balance, how do we ensure the atomicity of the operation? Without any intervention, these two steps may encounter various problems, such as account B being canceled or service call timeouts, etc.
<strong>Timeout issues have always been a difficult problem to solve in distributed applications</strong>; we cannot accurately know whether service B has executed and in what order. From a data perspective, this means the money in account B may not be successfully added. After the service-oriented transformation, each node only has partial information, while the transaction itself requires global coordination of all nodes, thus requiring a centralized role with a god's-eye view, capable of obtaining all information, which is the <strong>TC (transaction coordinator)</strong>, used to globally coordinate the transaction state. The <strong>TM (Transaction Manager)</strong> is the role that drives the generation of transaction proposals. However, even gods nod off, and their judgments are not always correct, so we need an <strong>RM (resource manager)</strong> role to verify the authenticity of the transaction as a representative of the soul. This is TXC's most basic philosophical model. We have methodologically verified that its data consistency is very complete, of course, our cognition is bounded. Perhaps the future will prove we were turkey engineers, but under current circumstances, its model is already sufficient to solve most existing problems.
<img loading="lazy" alt="Distributed Transaction Performance" src="/assets/images/分布式事务性能-379ce638304757417a8ed74fe07fc69c.jpg" width="1494" height="674" class="img_ev3q">
<strong>After years of architectural evolution, from the perspective of transaction single-link latency, TXC takes an average of about 0.2 milliseconds to process at the start of the transaction and about 0.4 milliseconds for branch registration, with the entire transaction's additional latency within the millisecond range. This is also the theoretical limit value we have calculated. In terms of throughput, the TPS of a single node reaches 30,000 times/second, and the TPS of a standard cluster is close to 100,000 times/second.</strong></p><br>#### Seata Open Source Why go open source? This is a question many people have asked me. In 2017, we commercialized the GTS (Global Transaction Service) product sold on Alibaba Cloud, with both public and private cloud forms. At this time, the internal group developed smoothly, but we encountered various problems in the process of commercialization. The problems can be summed up in two main categories: **First, developers are quite lacking in the theory of distributed transactions,** most people do not even understand what local transactions are, let alone distributed transactions. **Second, there are problems with product maturity,** often encountering various strange scenario issues, leading to a sharp rise in support and delivery costs, and R&amp;D turning into after-sales customer service. We reflected on why we encountered so many problems. The main issue here is that Alibaba Group internally has a unified language stack and unified technology stack, and our polishing of specific scenarios is very mature. Serving Alibaba, one company, and serving thousands of enterprises on the cloud is fundamentally different, which also made us realize that our product's scenario ecology was not well developed. On GitHub, more than 80% of open-source software is basic software, and basic software primarily solves the problem of scenario universality, so it cannot be locked in by a single enterprise, like Linux, which has a large number of community distributions. Therefore, in order to make our product better, we chose to open source and co-build with developers to popularize more enterprise users. ![Alibaba Open Source](/img/blog/阿里开源.jpg) Alibaba's open-source journey has gone through three main stages. **The first stage is the stage where Dubbo is located, where developers contribute out of love,** Dubbo has been open sourced for over 10 years, and time has fully proven that Dubbo is an excellent open-source software, and its microkernel plugin extensibility design is an important reference for me when I initially open sourced Seata. When designing software, we need to consider which is more important between extensibility and performance, whether we are doing a three-year design, a five-year design, or a ten-year design that meets business development. While solving the 0-1 service call problem, can we predict the governance problems after the 1-100 scale-up? **The second stage is the closed loop of open source and commercialization, where commercialization feeds back into the open-source community, promoting the development of the open-source community.** I think cloud manufacturers are more likely to do open source well for the following reasons: - First, the cloud is a scaled economy, which must be established on a stable and mature kernel foundation, packaging its product capabilities including high availability, maintenance-free, and elasticity on top of it. An unstable kernel will inevitably lead to excessive delivery and support costs, and high penetration of the R&amp;D team's support Q&amp;A will prevent large-scale replication, and high penetration rates will prevent rapid evolution and iteration of products. - Second, commercial products know business needs better. Our internal technical teams often YY requirements from a development perspective, and what they make is not used by anyone, and thus does not form a value conversion. The business requirements collected through commercialization are all real, so its open source kernel must also evolve in this direction. Failure to evolve in this direction will inevitably lead to architectural splits on both sides, increasing the team's maintenance costs. - Finally, the closed loop of open source and commercialization can promote better development of both parties. If the open-source kernel often has various problems, would you believe that its commercial product is good enough? **The third stage is systematization and standardization.** First, systematization is the basis of open-source solutions. Alibaba's open-source projects are mostly born out of internal e-commerce scenario practices. For example, Higress is used to connect Ant Group's gateways; Nacos carries services with millions of instances and tens of millions of connections; Sentinel provides degradation and throttling capabilities for high availability during major promotions; and Seata ensures transaction data consistency. This set of systematized open-source solutions is designed based on the best practices of Alibaba's e-commerce ecosystem. Second, standardization is another important feature. Taking OpenSergo as an example, it is both a standard and an implementation. In the past few years, the number of domestic open-source projects has exploded. However, the capabilities of various open-source products vary greatly, and many compatibility issues arise when integrating with each other. Therefore, open-source projects like OpenSergo can define some standardized capabilities and interfaces and provide some implementations, which will greatly help the development of the entire open-source ecosystem.<br>### Latest Developments in the Seata Community #### Introduction to the Seata Community ![Community Introduction](/img/blog/社区简介.jpg) **At present, Seata has open-sourced 4 transaction modes, including AT, TCC, Saga, and XA, and is actively exploring other viable transaction solutions.** Seata has integrated with more than 10 mainstream RPC frameworks and relational databases, and has integrated or been integrated relationships with more than 20 communities. In addition, we are also exploring languages other than Java in the multi-language system, such as Golang, PHP, Python, and JS. Seata has been applied to business systems by thousands of customers. Seata applications have become more mature, with successful cooperation with the community in the financial business scenarios of CITIC Bank and Everbright Bank, and successfully adopted into core accounting systems. The landing of microservices systems in financial scenarios is very stringent, which also marks a new level of maturity for Seata's kernel.<br>#### Seata Ecosystem Expansion ![Ecosystem Expansion](/img/blog/扩展生态.jpg) **Seata adopts a microkernel and plugin architecture design, exposing rich extension points in APIs, registry configuration centers, storage modes, lock control, SQL parsers, load balancing, transport, protocol encoding and decoding, observability, and more.** This allows businesses to easily perform flexible extensions and select technical components.<br>#### Seata Application Cases ![Application Cases](/img/blog/应用案例.jpg) **Case 1: China Aviation Information's Air Travel Project** The China Aviation Information Air Travel project introduced Seata in the 0.2 version to solve the data consistency problem of ticket and coupon business, greatly improving development efficiency, reducing asset losses caused by data inconsistency, and enhancing user interaction experience. **Case 2: Didi Chuxing's Two-Wheeler Business Unit** Didi Chuxing's Two-Wheeler Business Unit introduced Seata in version 0.6.1, solving the data consistency problem of business processes such as blue bicycles, electric vehicles, and assets, optimizing the user experience, and reducing asset loss. **Case 3: Meituan's Infrastructure** Meituan's infrastructure team developed the internal distributed transaction solution Swan based on the open-source Seata project, which is used to solve distributed transaction problems within Meituan's various businesses. **Case 4: Hema Town** Hema Town uses Seata to control the flower-stealing process in game interactions, significantly shortening the development cycle from 20 days to 5 days, effectively reducing development costs.<br>#### Evolution of Seata Transaction Modes ![Mode Evolution](/img/blog/模式演进.jpg)<br>#### Current Progress of Seata - Support for Oracle and PostgreSQL multi-primary keys. - Support for Dubbo3. - Support for Spring Boot3. - Support for JDK 17. - Support for ARM64 images. - Support for multiple registration models. - Extended support for various SQL syntaxes. - Support for GraalVM Native Image. - Support for Redis lua storage mode.<br>### Seata 2.x Development Planning ![Development Planning](/img/blog/发展规划.jpg) Mainly includes the following aspects: - **Storage/Protocol/Features** Explore storage and computing separation in Raft cluster mode; better experience, unify the current 4 transaction mode APIs; compatible with GTS protocol; support Saga annotations; support distributed lock control; support data perspective insight and governance. - **Ecosystem** Support more databases, more service frameworks, while exploring support for the domestic trust creation ecosystem; support the MQ ecosystem; further enhance APM support. - **Solutions** In addition to supporting microservices ecosystems, explore multi-cloud solutions; closer to cloud-native solutions; add security and traffic protection capabilities; achieve self-convergence of core components in the architecture. - **Multi-Language Ecosystem** Java is the most mature in the multi-language ecosystem, continue to improve other supported programming languages, while exploring Transaction Mesh solutions that are independent of languages. - **R&amp;D Efficiency/Experience** Improve test coverage, prioritize quality, compatibility, and stability; restructure the official website's documentation to improve the hit rate of document searches; simplify operations and deployment on the experience side, achieve one-click installation and metadata simplification; console supports transaction control and online analysis capabilities.<p>In one sentence, the 2.x plan is summarized as: <strong>Bigger scenarios, bigger ecosystems, from usable to user-friendly.</strong></p><br>### Contact Information for the Seata Community ![Contact Information](/img/blog/联系方式.jpg)]]></content>
        <author>
            <name>Ji Min - Founder of the Seata Open Source Community, Leader of the Distributed Transactions Team</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Designing More Flexible Financial Applications with Seata Saga]]></title>
        <id>https://seata.io/blog/design-more-flexable-application-by-saga</id>
        <link href="https://seata.io/blog/design-more-flexable-application-by-saga"/>
        <updated>2019-11-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article delves into the pain points of developing distributed financial applications, analyzing solutions from both theoretical and practical perspectives. It explains how to design more flexible financial applications using Seata Saga.]]></summary>
        <content type="html"><![CDATA[<p>Seata, short for Simple Extensible Autonomous Transaction Architecture, is an all-in-one distributed transaction solution. It provides AT, TCC, Saga, and XA transaction modes. This article provides a detailed explanation of the Saga mode within Seata, with the project hosted on <a href="https://github.com/apache/incubator-seata" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><p>Author: Yiyuan (Chen Long), Core Developer of Distributed Transactions at Ant Financial, Seata Committer.</p><a name="uTwja"></a><h1>Pain Points in Financial Distributed Application Development</h1><p>Distributed systems face a prominent challenge where a business process requires a composition of various services. This challenge becomes even more pronounced in a microservices architecture, as it necessitates consistency guarantees at the business level. In other words, if a step fails, it either needs to roll back to the previous service invocation or continuously retry to ensure the success of all steps. - From "Left Ear Wind - Resilient Design: Compensation Transaction"</p><p>In the domain of financial microservices architecture, business processes are often more complex. Processes are lengthy, such as a typical internet microloan business process involving calls to more than ten services. When combined with exception handling processes, the complexity increases further. Developers with experience in financial business development can relate to these challenges.</p><p>During the development of financial distributed applications, we encounter several pain points:</p><ul><li><p><strong>Difficulty Ensuring Business Consistency</strong><br></p><p>  In many of the systems we encounter (e.g., in channel layers, product layers, and integration layers), ensuring eventual business consistency often involves adopting a "compensation" approach. Without a coordinator to support this, the development difficulty is significant. Each step requires handling "rollback" operations in catch blocks, resulting in a code structure resembling an "arrow," with poor readability and maintainability. Alternatively, retrying exceptional operations, if unsuccessful, might lead to asynchronous retries or even manual intervention. These challenges impose a significant burden on developers, reducing development efficiency and increasing the likelihood of errors.</p></li><li><p><strong>Difficulty Managing Business State</strong><br></p><p>  With numerous business entities and their corresponding states, developers often update the entity's state in the database after completing a business activity. Lack of a state machine to manage the entire state transition process results in a lack of intuitiveness, increases the likelihood of errors, and causes the business to enter an incorrect state.</p></li><li><p><strong>Difficulty Ensuring Idempotence</strong><br></p><p>  Idempotence of services is a fundamental requirement in a distributed environment. Ensuring the idempotence of services often requires developers to design each service individually, using unique keys in databases or distributed caches. There is no unified solution, creating a significant burden on developers and increasing the chances of oversight, leading to financial losses.</p></li><li><p><strong>Challenges in Business Monitoring and Operations; Lack of Unified Error Guardian Capability</strong><br></p><p>  Monitoring the execution of business operations is usually done by logging, and monitoring platforms are based on log analysis. While this is generally sufficient, in the case of business errors, these monitors lack immediate access to the business context and require additional database queries. Additionally, the reliance on developers for log printing makes it prone to omissions. For compensatory transactions, there is often a need for "error guardian triggering compensation" and "worker-triggered compensation" operations. The lack of a unified error guardian and processing standard requires developers to implement these individually, resulting in a heavy development burden.</p></li></ul><a name="hvEU6"></a><h1>Theoretical Foundation</h1><p>In certain scenarios where strong consistency is required for data, we may adopt distributed transaction schemes like "Two-Phase Commit" at the business layer. However, in other scenarios, where such strong consistency is not necessary, ensuring eventual consistency is sufficient.</p><p>For example, Ant Financial currently employs the TCC (Try, Confirm, Cancel) pattern in its financial core systems. The characteristics of financial core systems include high consistency requirements (business isolation), short processes, and high concurrency.</p><p>On the other hand, in many business systems above the financial core (e.g., systems in the channel layer, product layer, and integration layer), the emphasis is on achieving eventual consistency. These systems typically have complex processes, long flows, and may need to call services from other companies (such as financial networks). Developing Try, Confirm, Cancel methods for each service in these scenarios incurs high costs. Additionally, when there are services from other companies in the transaction, it is impractical to require those services to follow the TCC development model. Long processes can negatively impact performance if transaction boundaries are too extensive.</p><p>When it comes to transactions, we are familiar with ACID, and we are also acquainted with the CAP theorem, which states that at most two out of three—Consistency (C), Availability (A), and Partition Tolerance (P)—can be achieved simultaneously. To enhance performance, a variant of ACID known as BASE emerged. While ACID emphasizes consistency (C in CAP), BASE emphasizes availability (A in CAP). Achieving strong consistency (ACID) is often challenging, especially when dealing with multiple systems that are not provided by a single company. BASE systems are designed to create more resilient systems. In many situations, particularly when dealing with multiple systems and providers, BASE systems acknowledge the risk of data inconsistency in the short term. This allows new transactions to occur, with potentially problematic transactions addressed later through compensatory means to ensure eventual consistency.</p><p>Therefore, in practical development, we make trade-offs. For many business systems above the financial core, compensatory transactions can be adopted. The concept of compensatory transactions has been proposed for about 30 years, with the Saga theory emerging as a solution for long transactions. With the recent rise of microservices, Saga has gradually gained attention in recent years. Currently, the industry generally recognizes Saga as a solution for handling long transactions.</p><blockquote><p><a href="https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf" target="_blank" rel="noopener noreferrer">https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf</a>[1][http://microservices.io/patterns/data/saga.html]<!-- -->(<a href="http://microservices.io/patterns/data/saga.html)%5B2%5D" target="_blank" rel="noopener noreferrer">http://microservices.io/patterns/data/saga.html)[2]</a></p></blockquote><a name="k8kbY"></a><h1>Community and Industry Solutions</h1><a name="Oc5Er"></a>## Apache Camel Saga<p>Camel is an open-source product that implements Enterprise Integration Patterns (EIP). It is based on an event-driven architecture and offers good performance and throughput. In version 2.21, Camel introduced the Saga EIP.</p><p>The Saga EIP provides a way to define a series of related actions through Camel routes. These actions either all succeed or all roll back. Saga can coordinate distributed services or local services using any communication protocol, achieving global eventual consistency. Saga does not require the entire process to be completed in a short time because it does not occupy any database locks. It can support requests that require long processing times, ranging from seconds to days. Camel's Saga EIP is based on <a href="https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA" target="_blank" rel="noopener noreferrer">MicroProfile's LRA</a>[3]<!-- --> (Long Running Action). It also supports the coordination of distributed services implemented in any language using any communication protocol.</p><p>The implementation of Saga does not lock data. Instead, it defines "compensating operations" for each operation. When an error occurs during the normal process execution, the "compensating operations" for the operations that have already been executed are triggered to roll back the process. "Compensating operations" can be defined on Camel routes using Java or XML DSL (Definition Specific Language).</p><p>Here is an example of Java DSL:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// Java DSL example goes here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```java</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// action</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from("direct:reserveCredit")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .bean(idService, "generateCustomId") // generate a custom Id and set it in the body</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .to("direct:creditReservation")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// delegate action</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from("direct:creditReservation")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .saga()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .propagation(SagaPropagation.SUPPORTS)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .option("CreditId", body()) // mark the current body as needed in the compensating action</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .compensation("direct:creditRefund")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .bean(creditService, "reserveCredit")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    .log("Credit ${header.amount} reserved. Custom Id used is ${body}");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// called only if the saga is cancelled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from("direct:creditRefund")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .transform(header("CreditId")) // retrieve the CreditId option from headers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .bean(creditService, "refundCredit")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .log("Credit for Custom Id ${body} refunded");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>XML DSL sample:</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">route</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">from</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">uri</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">direct:start</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">saga</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">compensation</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">uri</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">direct:compensation</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">completion</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">uri</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">direct:completion</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">option</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">optionName</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">myOptionKey</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">constant</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">myOptionValue</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">constant</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">option</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">option</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">optionName</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">myOptionKey2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">constant</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">myOptionValue2</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">constant</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">option</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">saga</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">to</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">uri</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">direct:action1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">to</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">uri</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">direct:action2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">route</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><a name="pQWuF"></a><h2 class="anchor anchorWithStickyNavbar_LWe7" id="eventuate-tram-saga">Eventuate Tram Saga<a href="#eventuate-tram-saga" class="hash-link" aria-label="Direct link to Eventuate Tram Saga" title="Direct link to Eventuate Tram Saga">​</a></h2><p><a href="https://github.com/eventuate-tram/eventuate-tram-sagas" target="_blank" rel="noopener noreferrer">Eventuate Tram Saga</a>[4]<!-- -->&nbsp;The framework is a Saga framework for Java microservices using JDBC/JPA. Similar to Camel Saga, it also adopts Java DSL to define compensating operations:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class CreateOrderSaga implements SimpleSaga&lt;CreateOrderSagaData&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  private SagaDefinition&lt;CreateOrderSagaData&gt; sagaDefinition =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          step()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .withCompensation(this::reject)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          .step()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .invokeParticipant(this::reserveCredit)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          .step()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .invokeParticipant(this::approve)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          .build();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  public SagaDefinition&lt;CreateOrderSagaData&gt; getSagaDefinition() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return this.sagaDefinition;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  private CommandWithDestination reserveCredit(CreateOrderSagaData data) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    long orderId = data.getOrderId();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Long customerId = data.getOrderDetails().getCustomerId();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Money orderTotal = data.getOrderDetails().getOrderTotal();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return send(new ReserveCreditCommand(customerId, orderId, orderTotal))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .to("customerService")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .build();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><a name="scN9h"></a><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apache-servicecomb-saga">Apache ServiceComb Saga<a href="#apache-servicecomb-saga" class="hash-link" aria-label="Direct link to Apache ServiceComb Saga" title="Direct link to Apache ServiceComb Saga">​</a></h2><p><a href="https://github.com/apache/incubator-servicecomb-saga" target="_blank" rel="noopener noreferrer">ServiceComb Saga</a>[5]<!-- --> is also a solution for achieving data eventual consistency in microservices applications. In contrast to <a href="http://design.inf.usi.ch/sites/default/files/biblio/rest-tcc.pdf" target="_blank" rel="noopener noreferrer">TCC</a>, Saga directly commits transactions in the try phase, and the subsequent rollback phase is completed through compensating operations in reverse. What sets it apart is the use of Java annotations and interceptors to define "compensating" services.<br></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="architecture">Architecture:<a href="#architecture" class="hash-link" aria-label="Direct link to Architecture:" title="Direct link to Architecture:">​</a></h4><p>Saga consists of <strong>alpha</strong> and <strong>omega</strong>, where:</p><ul><li>Alpha acts as the coordinator, primarily responsible for managing and coordinating transactions;<br></li><li>Omega is an embedded agent in microservices, responsible for intercepting network requests and reporting transaction events to alpha;<br></li></ul><p>The diagram below illustrates the relationship between alpha, omega, and microservices:<br></p><p><img loading="lazy" alt="ServiceComb Saga" src="/assets/images/service-comb-saga-cb30d341b536a9227801771bc0836ee2.png" width="746" height="261" class="img_ev3q"></p><a name="ggflbq"></a><h4 class="anchor anchorWithStickyNavbar_LWe7" id="sample">sample：<a href="#sample" class="hash-link" aria-label="Direct link to sample：" title="Direct link to sample：">​</a></h4><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class ServiceA extends AbsService implements IServiceA {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Autowired</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  private IServiceB serviceB;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Autowired</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  private IServiceC serviceC;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  public String getServiceName() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return "servicea";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  public String getTableName() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return "testa";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @SagaStart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Compensable(compensationMethod = "cancelRun")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  @Transactional(rollbackFor = Exception.class)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  public Object run(InvokeContext invokeContext) throws Exception {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LOG.info("A.run called");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    doRunBusi();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (invokeContext.isInvokeB(getServiceName())) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      serviceB.run(invokeContext);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (invokeContext.isInvokeC(getServiceName())) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      serviceC.run(invokeContext);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (invokeContext.isException(getServiceName())) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      LOG.info("A.run exception");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      throw new Exception("A.run exception");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  public void cancelRun(InvokeContext invokeContext) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LOG.info("A.cancel called");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    doCancelBusi();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><a name="CnD8r"></a><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ant-financials-practice">Ant Financial's Practice<a href="#ant-financials-practice" class="hash-link" aria-label="Direct link to Ant Financial's Practice" title="Direct link to Ant Financial's Practice">​</a></h2><p>Ant Financial extensively uses the TCC mode for distributed transactions, mainly in scenarios where high consistency and performance are required, such as in financial core systems. In upper-level business systems with complex and lengthy processes, developing TCC can be costly. In such cases, most businesses opt for the Saga mode to achieve eventual business consistency. Due to historical reasons, different business units have their own set of "compensating" transaction solutions, basically falling into two categories:</p><ol><li><p>When a service needs to "retry" or "compensate" in case of failure, a record is inserted into the database with the status before executing the service. When an exception occurs, a scheduled task queries the database record and performs "retry" or "compensation." If the business process is successful, the record is deleted.</p></li><li><p>Designing a state machine engine and a simple DSL to orchestrate business processes and record business states. The state machine engine can define "compensating services." In case of an exception, the state machine engine invokes "compensating services" in reverse. There is also an "error guardian" platform that monitors failed or uncompensated business transactions and continuously performs "compensation" or "retry."</p></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution-comparison">Solution Comparison<a href="#solution-comparison" class="hash-link" aria-label="Direct link to Solution Comparison" title="Direct link to Solution Comparison">​</a></h2><p>Generally, there are two common solutions in the community and industry: one is based on a state machine or a process engine that orchestrates processes and defines compensation through DSL; the other is based on Java annotations and interceptors to implement compensation. What are the advantages and disadvantages of these two approaches?</p><table><thead><tr><th>Approach</th><th>Pros</th><th>Cons</th></tr></thead><tbody><tr><td>State Machine + DSL</td><td><br>- Business processes can be defined using visual tools, standardized, readable, and can achieve service orchestration functionality<br>- Improves communication efficiency between business analysts and developers<br>- Business state management: Processes are essentially state machines, reflecting the flow of business states<br>- Enhances flexibility in exception handling: Can implement "forward retry" or "backward compensation" after recovery from a crash<br>- Naturally supports asynchronous processing engines such as Actor model or SEDA architecture, improving overall throughput<br></td><td><br>- Business processes are composed of JAVA programs and DSL configurations, making development relatively cumbersome<br>- High intrusiveness into existing business if it is a transformation<br>- High implementation cost of the engine<br></td></tr><tr><td>Interceptor + Java Annotation</td><td><br>- Programs and annotations are integrated, simple development, low learning curve<br>- Easy integration into existing businesses<br>- Low framework implementation cost</td><td><br>- The framework cannot provide asynchronous processing modes such as the Actor model or SEDA architecture to improve system throughput<br>- The framework cannot provide business state management<br>- Difficult to achieve "forward retry" after crash recovery due to the inability to restore thread context<br></td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="seata-saga-approach">Seata Saga Approach<a href="#seata-saga-approach" class="hash-link" aria-label="Direct link to Seata Saga Approach" title="Direct link to Seata Saga Approach">​</a></h2><p>The introduction of Seata Saga can be found in <a href="http://seata.io/zh-cn/docs/user/saga.html" target="_blank" rel="noopener noreferrer">Seata Saga Official Documentation</a>[6]<!-- -->.</p><p>Seata Saga adopts the state machine + DSL approach for the following reasons:</p><ul><li>The state machine + DSL approach is more widely used in practical production scenarios.</li><li>Can use asynchronous processing engines such as the Actor model or SEDA architecture to improve overall throughput.</li><li>Typically, business systems above the core system have "service orchestration" requirements, and service orchestration has transactional eventual consistency requirements. These two are challenging to separate. The state machine + DSL approach can simultaneously meet these two requirements.</li><li>Because Saga mode theoretically does not guarantee isolation, in extreme cases, it may not complete the rollback operation due to dirty writing. For example, in a distributed transaction, if you recharge user A first and then deduct the balance from user B, if A user consumes the balance before the transaction is committed, and the transaction is rolled back, there is no way to compensate. Some business scenarios may allow the business to eventually succeed, and in cases where rollback is impossible, it can continue to retry the subsequent process. The state machine + DSL approach can achieve the ability to "forward" recover context and continue execution, making the business eventually successful and achieving eventual consistency.</li></ul><blockquote><p>In cases where isolation is not guaranteed: When designing business processes, follow the principle of "prefer long款, not short款." Long款 means fewer funds for customers and more funds for institutions. Institutions can refund customers based on their credibility. Conversely, short款 means less funding for institutions, and the funds may not be recovered. Therefore, in business process design, deduction should be done first.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="state-definition-language-seata-state-language">State Definition Language (Seata State Language)<a href="#state-definition-language-seata-state-language" class="hash-link" aria-label="Direct link to State Definition Language (Seata State Language)" title="Direct link to State Definition Language (Seata State Language)">​</a></h3><ol><li><p>Define the service call process through a state diagram and generate a JSON state language definition file.</p></li><li><p>In the state diagram, a node can be a service call, and the node can configure its compensating node.</p></li><li><p>The JSON state diagram is driven by the state machine engine. When an exception occurs, the state engine executes the compensating node corresponding to the successfully executed node to roll back the transaction.</p><blockquote><p>Note: Whether to compensate when an exception occurs can also be user-defined.</p></blockquote></li><li><p>It can meet service orchestration requirements, supporting one-way selection, concurrency, asynchronous, sub-state machine, parameter conversion, parameter mapping, service execution status judgment, exception capture, and other functions.</p></li></ol><p>Assuming a business process calls two services, deducting inventory (InventoryService) and deducting balance (BalanceService), to ensure that in a distributed scenario, either both succeed or both roll back. Both participant services have a <code>reduce</code> method for inventory deduction or balance deduction, and a <code>compensateReduce</code> method for compensating deduction operations. Let's take a look at the interface definition of InventoryService:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface InventoryService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * reduce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param businessKey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param amount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param params</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    boolean reduce(String businessKey, BigDecimal amount, Map&lt;String, Object&gt; params);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * compensateReduce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param businessKey</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param params</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    boolean compensateReduce(String businessKey, Map&lt;String, Object&gt; params);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="this-is-the-state-diagram-corresponding-to-the-business-process">This is the state diagram corresponding to the business process:<a href="#this-is-the-state-diagram-corresponding-to-the-business-process" class="hash-link" aria-label="Direct link to This is the state diagram corresponding to the business process:" title="Direct link to This is the state diagram corresponding to the business process:">​</a></h2><p><img loading="lazy" alt="Example State Diagram" src="/assets/images/demo_statelang-90f1fc01bfaf3a795c3b3357e1046f16.png" width="508" height="543" class="img_ev3q"></p><br>Corresponding JSON<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Name"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"reduceInventoryAndBalance"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Comment"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"reduce inventory then reduce balance in a transaction"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"StartState"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ReduceInventory"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Version"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.0.1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"States"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"ReduceInventory"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ServiceTask"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"inventoryAction"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceMethod"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"reduce"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"CompensateState"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CompensateReduceInventory"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ChoiceState"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Input"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"$.[businessKey]"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"$.[count]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Output"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"reduceInventoryResult"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.#root"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Status"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"#root == true"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SU"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"#root == false"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"FA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"$Exception{java.lang.Throwable}"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"UN"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"ChoiceState"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Choices"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"Expression"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"[reduceInventoryResult] == true"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"ReduceBalance"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Default"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Fail"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"ReduceBalance"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ServiceTask"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"balanceAction"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceMethod"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"reduce"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"CompensateState"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CompensateReduceBalance"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Input"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"$.[businessKey]"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"$.[amount]"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"throwException"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.[mockReduceBalanceFail]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Output"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"compensateReduceBalanceResult"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.#root"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Status"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"#root == true"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SU"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"#root == false"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"FA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"$Exception{java.lang.Throwable}"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"UN"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Catch"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"Exceptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"java.lang.Throwable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CompensationTrigger"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Succeed"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"CompensateReduceInventory"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ServiceTask"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"inventoryAction"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceMethod"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"compensateReduce"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Input"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"$.[businessKey]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"CompensateReduceBalance"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ServiceTask"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"balanceAction"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ServiceMethod"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"compensateReduce"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Input"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"$.[businessKey]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"CompensationTrigger"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CompensationTrigger"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Fail"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Succeed"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Succeed"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Fail"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Fail"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ErrorCode"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PURCHASE_FAILED"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Message"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"purchase failed"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="this-is-the-state-language-to-some-extent-referring-to-aws-step-functions7">This is the state language to some extent referring to <a href="https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html" target="_blank" rel="noopener noreferrer">AWS Step Functions</a>[7]<!-- -->.<a href="#this-is-the-state-language-to-some-extent-referring-to-aws-step-functions7" class="hash-link" aria-label="Direct link to this-is-the-state-language-to-some-extent-referring-to-aws-step-functions7" title="Direct link to this-is-the-state-language-to-some-extent-referring-to-aws-step-functions7">​</a></h2><a name="2de9b28a"></a><h4 class="anchor anchorWithStickyNavbar_LWe7" id="introduction-to-state-machine-attributes">Introduction to "State Machine" Attributes:<a href="#introduction-to-state-machine-attributes" class="hash-link" aria-label="Direct link to Introduction to &quot;State Machine&quot; Attributes:" title="Direct link to Introduction to &quot;State Machine&quot; Attributes:">​</a></h4><ul><li>Name: Represents the name of the state machine, must be unique;</li><li>Comment: Description of the state machine;</li><li>Version: Version of the state machine definition;</li><li>StartState: The first "state" to run when starting;</li><li>States: List of states, a map structure, where the key is the name of the "state," which must be unique within the state machine;</li></ul><a name="2b956670"></a><h4 class="anchor anchorWithStickyNavbar_LWe7" id="introduction-to-state-attributes">Introduction to "State" Attributes:<a href="#introduction-to-state-attributes" class="hash-link" aria-label="Direct link to Introduction to &quot;State&quot; Attributes:" title="Direct link to Introduction to &quot;State&quot; Attributes:">​</a></h4><ul><li>Type: The type of the "state," such as:<ul><li>ServiceTask: Executes the service task;</li><li>Choice: Single conditional choice route;</li><li>CompensationTrigger: Triggers the compensation process;</li><li>Succeed: Normal end of the state machine;</li><li>Fail: Exceptional end of the state machine;</li><li>SubStateMachine: Calls a sub-state machine;</li></ul></li><li>ServiceName: Service name, usually the beanId of the service;</li><li>ServiceMethod: Service method name;</li><li>CompensateState: Compensatory "state" for this state;</li><li>Input: List of input parameters for the service call, an array corresponding to the parameter list of the service method, $. represents using an expression to retrieve parameters from the state machine context. The expression uses <a href="https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html" target="_blank" rel="noopener noreferrer">SpringEL</a>[8]<!-- -->, and if it is a constant, write the value directly;</li><li>Output: Assigns the parameters returned by the service to the state machine context, a map structure, where the key is the key when placing it in the state machine context (the state machine context is also a map), and the value uses $. as a SpringEL expression, indicating the value is taken from the return parameters of the service, #root represents the entire return parameters of the service;</li><li>Status: Mapping of the service execution status, the framework defines three statuses, SU success, FA failure, UN unknown. We need to map the execution status of the service into these three statuses, helping the framework judge the overall consistency of the transaction. It is a map structure, where the key is a condition expression, usually based on the return value of the service or the exception thrown for judgment. The default is a SpringEL expression to judge the return parameters of the service. Those starting with $Exception{ indicate judging the exception type, and the value is mapped to this value when this condition expression is true;</li><li>Catch: Route after catching an exception;</li><li>Next: The next "state" to execute after the service is completed;</li><li>Choices: List of optional branches in the Choice type "state," where Expression is a SpringEL expression, and Next is the next "state" to execute when the expression is true;</li><li>ErrorCode: Error code for the Fail type "state";</li><li>Message: Error message for the Fail type "state";</li></ul><p>For more detailed explanations of the state language, please refer to <a href="http://seata.io/zh-cn/docs/user/saga.html" target="_blank" rel="noopener noreferrer">Seata Saga Official Documentation</a>[6<a href="http://seata.io/zh-cn/docs/user/saga.html" target="_blank" rel="noopener noreferrer">http://seata.io/zh-cn/docs/user/saga.html</a>].</p><a name="209f0e37"></a><h3 class="anchor anchorWithStickyNavbar_LWe7" id="state-machine-engine-principle">State Machine Engine Principle:<a href="#state-machine-engine-principle" class="hash-link" aria-label="Direct link to State Machine Engine Principle:" title="Direct link to State Machine Engine Principle:">​</a></h3><p><img loading="lazy" alt="State Machine Engine Principle" src="/assets/images/saga_engine_mechanism-38f1563ee8316a5dcabeeba27f511f79.png" width="936" height="672" class="img_ev3q"></p><ul><li>The state diagram in the image first executes stateA, then executes stateB, and then executes stateC;</li><li>The execution of "states" is based on an event-driven model. After stateA is executed, a routing message is generated and placed in the EventQueue. The event consumer takes the message from the EventQueue and executes stateB;</li><li>When the entire state machine is started, Seata Server is called to start a distributed transaction, and the xid is generated. Then, the start event of the "state machine instance" is recorded in the local database;</li><li>When a "state" is executed, Seata Server is called to register a branch transaction, and the branchId is generated. Then, the start event of the "state instance" is recorded in the local database;</li><li>After a "state" is executed, the end event of the "state instance" is recorded in the local database, and Seata Server is called to report the status of the branch transaction;</li><li>When the entire state machine is executed, the completion event of the "state machine instance" is recorded in the local database, and Seata Server is called to commit or roll back the distributed transaction;</li></ul><a name="808e95dc"></a><h3 class="anchor anchorWithStickyNavbar_LWe7" id="design-of-state-machine-engine">Design of State Machine Engine:<a href="#design-of-state-machine-engine" class="hash-link" aria-label="Direct link to Design of State Machine Engine:" title="Direct link to Design of State Machine Engine:">​</a></h3><p><img loading="lazy" alt="Design of State Machine Engine" src="/assets/images/saga_engine-41e75396b108b8e6c157d08766368124.png" width="1044" height="702" class="img_ev3q"></p><p>The design of the state machine engine is mainly divided into three layers, with the upper layer depending on the lower layer. From bottom to top, they are:</p><ul><li><p>Eventing Layer:</p><ul><li>Implements an event-driven architecture that can push events and be consumed by a consumer. This layer does not care about what the event is or what the consumer executes; it is implemented by the upper layer.</li></ul></li><li><p>ProcessController Layer:</p><ul><li>Driven by the above Eventing to execute a "empty" process. The behavior and routing of "states" are not implemented. It is implemented by the upper layer.<blockquote><p>Based on the above two layers, theoretically, any "process" engine can be customly extended. The design of these two layers is based on the internal design of the financial network platform.</p></blockquote></li></ul></li></ul><ul><li>StateMachineEngine Layer:<ul><li>Implements the behavior and routing logic of each type of state in the state machine engine;</li><li>Provides API and state machine language repository;</li></ul></li></ul><a name="73a9fddd"></a><h3 class="anchor anchorWithStickyNavbar_LWe7" id="practical-experience-in-service-design-under-saga-mode">Practical Experience in Service Design under Saga Mode<a href="#practical-experience-in-service-design-under-saga-mode" class="hash-link" aria-label="Direct link to Practical Experience in Service Design under Saga Mode" title="Direct link to Practical Experience in Service Design under Saga Mode">​</a></h3><p>Below are some practical experiences summarized in the design of microservices under Saga mode. Of course, these are recommended practices, not necessarily to be followed 100%. There are "workaround" solutions even if not followed.</p><blockquote><p>Good news: Seata Saga mode has no specific requirements for the interface parameters of microservices, making Saga mode suitable for integrating legacy systems or services from external institutions.</p></blockquote><a name="d64c5051"></a><h4 class="anchor anchorWithStickyNavbar_LWe7" id="allow-empty-compensation">Allow Empty Compensation<a href="#allow-empty-compensation" class="hash-link" aria-label="Direct link to Allow Empty Compensation" title="Direct link to Allow Empty Compensation">​</a></h4><ul><li>Empty Compensation: The original service was not executed, but the compensation service was executed;</li><li>Reasons:<ul><li>Timeout (packet loss) of the original service;</li><li>Saga transaction triggers a rollback;</li><li>The request of the original service is not received, but the compensation request is received first;</li></ul></li></ul><p>Therefore, when designing services, it is necessary to allow empty compensation, that is, if the business primary key to be compensated is not found, return compensation success and record the original business primary key.</p><a name="88a92b17"></a><h4 class="anchor anchorWithStickyNavbar_LWe7" id="hang-prevention-control">Hang Prevention Control<a href="#hang-prevention-control" class="hash-link" aria-label="Direct link to Hang Prevention Control" title="Direct link to Hang Prevention Control">​</a></h4><ul><li>Hang: Compensation service is executed before the original service;</li><li>Reasons:<ul><li>Timeout (congestion) of the original service;</li><li>Saga transaction rollback triggers a rollback;</li><li>Congested original service arrives;</li></ul></li></ul><p>Therefore, check whether the current business primary key already exists in the business primary keys recorded by empty compensation. If it exists, reject the execution of the service.</p><a name="ce766631"></a><h4 class="anchor anchorWithStickyNavbar_LWe7" id="idempotent-control">Idempotent Control<a href="#idempotent-control" class="hash-link" aria-label="Direct link to Idempotent Control" title="Direct link to Idempotent Control">​</a></h4><ul><li>Both the original service and the compensation service need to ensure idempotence. Due to possible network timeouts, a retry strategy can be set. When a retry occurs, idempotent control should be used to avoid duplicate updates to business data.</li></ul><a name="FO5YS"></a><h1>Summary</h1><p>Many times, we don't need to emphasize strong consistency. We design more resilient systems based on the BASE and Saga theories to achieve better performance and fault tolerance in distributed architecture. There is no silver bullet in distributed architecture, only solutions suitable for specific scenarios. In fact, Seata Saga is a product with the capabilities of "service orchestration" and "Saga distributed transactions." Summarizing, its applicable scenarios are:</p><ul><li>Suitable for handling "long transactions" in a microservices architecture;</li><li>Suitable for "service orchestration" requirements in a microservices architecture;</li><li>Suitable for business systems with a large number of composite services above the financial core system (such as systems in the channel layer, product layer, integration layer);</li><li>Suitable for scenarios where integration with services provided by legacy systems or external institutions is required (these services are immutable and cannot be required to be modified).</li></ul><a name="3X7vO"></a><h2 class="anchor anchorWithStickyNavbar_LWe7" id="related-links-mentioned-in-the-article">Related Links Mentioned in the Article<a href="#related-links-mentioned-in-the-article" class="hash-link" aria-label="Direct link to Related Links Mentioned in the Article" title="Direct link to Related Links Mentioned in the Article">​</a></h2><p>[1][https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf]<!-- -->(<a href="https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf" target="_blank" rel="noopener noreferrer">https://github.com/aphyr/dist-sagas/blob/master/sagas.pdf</a>)<br>[2][http://microservices.io/patterns/data/saga.html]<!-- -->(<a href="http://microservices.io/patterns/data/saga.html" target="_blank" rel="noopener noreferrer">http://microservices.io/patterns/data/saga.html</a>)<br>[3][Microprofile 的 LRA]<!-- -->(<a href="https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA)%EF%BC%9A%5Bhttps://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA%5D(https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA" target="_blank" rel="noopener noreferrer">https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA)：[https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA](https://github.com/eclipse/microprofile-sandbox/tree/master/proposals/0009-LRA</a>)<br>[4][Eventuate Tram Saga]<!-- -->(<a href="https://github.com/eventuate-tram/eventuate-tram-sagas)%EF%BC%9A%5Bhttps://github.com/eventuate-tram/eventuate-tram-sagas%5D(https://github.com/eventuate-tram/eventuate-tram-sagas" target="_blank" rel="noopener noreferrer">https://github.com/eventuate-tram/eventuate-tram-sagas)：[https://github.com/eventuate-tram/eventuate-tram-sagas](https://github.com/eventuate-tram/eventuate-tram-sagas</a>)<br>[5][ServiceComb Saga]<!-- -->(<a href="https://github.com/apache/incubator-servicecomb-saga)%EF%BC%9A%5Bhttps://github.com/apache/servicecomb-pack%5D(https://github.com/apache/servicecomb-pack" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-servicecomb-saga)：[https://github.com/apache/servicecomb-pack](https://github.com/apache/servicecomb-pack</a>)<br>[6][Seata Saga 官网文档]<!-- -->(<a href="http://seata.io/zh-cn/docs/user/saga.html)%EF%BC%9A%5Bhttp://seata.io/zh-cn/docs/user/saga.html%5D(http://seata.io/zh-cn/docs/user/saga.html" target="_blank" rel="noopener noreferrer">http://seata.io/zh-cn/docs/user/saga.html)：[http://seata.io/zh-cn/docs/user/saga.html](http://seata.io/zh-cn/docs/user/saga.html</a>)<br>[7][AWS Step Functions]<!-- -->(<a href="https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)%EF%BC%9A%5Bhttps://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html%5D(https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html" target="_blank" rel="noopener noreferrer">https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)：[https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html](https://docs.aws.amazon.com/zh_cn/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html</a>)<br>[8][SpringEL]<!-- -->(<a href="https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html)%EF%BC%9A%5Bhttps://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html%5D(https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html" target="_blank" rel="noopener noreferrer">https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html)：[https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html](https://docs.spring.io/spring/docs/4.3.10.RELEASE/spring-framework-reference/html/expressions.html</a>)<br></p>]]></content>
        <author>
            <name>long187</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use Seata to ensure consistency between Dubbo Microservices]]></title>
        <id>https://seata.io/blog/quick-start-use-seata-and-dubbo-services</id>
        <link href="https://seata.io/blog/quick-start-use-seata-and-dubbo-services"/>
        <updated>2019-03-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article will introduce you how to use Seata to ensure consistency between Dubbo Microservices.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="use-case">Use case<a href="#use-case" class="hash-link" aria-label="Direct link to Use case" title="Direct link to Use case">​</a></h2><p>A business logic for user purchasing commodities. The whole business logic is powered by 3 microservices:</p><ul><li>Storage service: deduct storage count on given commodity.</li><li>Order service: create order according to purchase request.</li><li>Account service: debit the balance of user's account.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="architecture">Architecture<a href="#architecture" class="hash-link" aria-label="Direct link to Architecture" title="Direct link to Architecture">​</a></h3><p><img loading="lazy" alt="Architecture" src="/assets/images/seata-1-921f8d579a15d413c12f3542be7f5ffb.png" width="1468" height="868" class="img_ev3q"> </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="storageservice">StorageService<a href="#storageservice" class="hash-link" aria-label="Direct link to StorageService" title="Direct link to StorageService">​</a></h3><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface StorageService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * deduct storage count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void deduct(String commodityCode, int count);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="orderservice">OrderService<a href="#orderservice" class="hash-link" aria-label="Direct link to OrderService" title="Direct link to OrderService">​</a></h3><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface OrderService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * create order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Order create(String userId, String commodityCode, int orderCount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="accountservice">AccountService<a href="#accountservice" class="hash-link" aria-label="Direct link to AccountService" title="Direct link to AccountService">​</a></h3><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public interface AccountService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * debit balance of user's account</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    void debit(String userId, int money);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="main-business-logic">Main business logic<a href="#main-business-logic" class="hash-link" aria-label="Direct link to Main business logic" title="Direct link to Main business logic">​</a></h3><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class BusinessServiceImpl implements BusinessService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private StorageService storageService;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private OrderService orderService;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * purchase</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void purchase(String userId, String commodityCode, int orderCount) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        storageService.deduct(commodityCode, orderCount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        orderService.create(userId, commodityCode, orderCount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class StorageServiceImpl implements StorageService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  private StorageDAO storageDAO;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void deduct(String commodityCode, int count) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Storage storage = new Storage();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        storage.setCount(count);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        storage.setCommodityCode(commodityCode);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        storageDAO.update(storage);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class OrderServiceImpl implements OrderService {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private OrderDAO orderDAO;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private AccountService accountService;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public Order create(String userId, String commodityCode, int orderCount) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int orderMoney = calculate(commodityCode, orderCount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        accountService.debit(userId, orderMoney);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Order order = new Order();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        order.userId = userId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        order.commodityCode = commodityCode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        order.count = orderCount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        order.money = orderMoney;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return orderDAO.insert(order);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="distributed-transaction-solution-with-seata">Distributed Transaction Solution with Seata<a href="#distributed-transaction-solution-with-seata" class="hash-link" aria-label="Direct link to Distributed Transaction Solution with Seata" title="Direct link to Distributed Transaction Solution with Seata">​</a></h2><p><img loading="lazy" alt="undefined" src="/assets/images/seata-2-3e4981c059d8c4d72aec440b06c30a65.png" width="1490" height="852" class="img_ev3q"> </p><p>We just need an annotation <code>@GlobalTransactional</code> on business method: </p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @GlobalTransactional</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void purchase(String userId, String commodityCode, int orderCount) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-powered-by-dubbo--seata">Example powered by Dubbo + Seata<a href="#example-powered-by-dubbo--seata" class="hash-link" aria-label="Direct link to Example powered by Dubbo + Seata" title="Direct link to Example powered by Dubbo + Seata">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-setup-database">Step 1: Setup database<a href="#step-1-setup-database" class="hash-link" aria-label="Direct link to Step 1: Setup database" title="Direct link to Step 1: Setup database">​</a></h3><ul><li>Requirement: MySQL with InnoDB engine.</li></ul><p><strong>Note:</strong> In fact, there should be 3 database for the 3 services in the example use case. However, we can just create one database and configure 3 data sources for simple. </p><p>Modify Spring XML with the database URL/username/password you just created.</p><p>dubbo-account-service.xml
dubbo-order-service.xml
dubbo-storage-service.xml</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">url</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">jdbc:mysql://x.x.x.x:3306/xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">username</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">password</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">xxx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-create-undo_log-table-for-seata">Step 2: Create UNDO_LOG table for Seata<a href="#step-2-create-undo_log-table-for-seata" class="hash-link" aria-label="Direct link to Step 2: Create UNDO_LOG table for Seata" title="Direct link to Step 2: Create UNDO_LOG table for Seata">​</a></h3><p><code>UNDO_LOG</code> table is required by Seata AT mode.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">undo_log</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">bigint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AUTO_INCREMENT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">branch_id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">bigint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">xid</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">rollback_info</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">longblob</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">log_status</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">log_created</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">datetime</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">log_modified</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">datetime</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">ext</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">idx_unionkey</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">xid</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">branch_id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ENGINE</span><span class="token operator" style="color:#393A34">=</span><span class="token keyword" style="color:#00009f">InnoDB</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AUTO_INCREMENT</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">159</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CHARSET</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">utf8</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-create-tables-for-example-business">Step 3: Create tables for example business<a href="#step-3-create-tables-for-example-business" class="hash-link" aria-label="Direct link to Step 3: Create tables for example business" title="Direct link to Step 3: Create tables for example business">​</a></h3><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">DROP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">IF</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">EXISTS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">storage_tbl</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">storage_tbl</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AUTO_INCREMENT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">commodity_code</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">count</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">UNIQUE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">commodity_code</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ENGINE</span><span class="token operator" style="color:#393A34">=</span><span class="token keyword" style="color:#00009f">InnoDB</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CHARSET</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">utf8</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">DROP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">IF</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">EXISTS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">order_tbl</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">order_tbl</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AUTO_INCREMENT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">user_id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">commodity_code</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">count</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">money</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ENGINE</span><span class="token operator" style="color:#393A34">=</span><span class="token keyword" style="color:#00009f">InnoDB</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CHARSET</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">utf8</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">DROP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">IF</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">EXISTS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">account_tbl</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">account_tbl</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">AUTO_INCREMENT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">user_id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">money</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">id</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ENGINE</span><span class="token operator" style="color:#393A34">=</span><span class="token keyword" style="color:#00009f">InnoDB</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DEFAULT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">CHARSET</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">utf8</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-start-seata-server">Step 4: Start Seata-Server<a href="#step-4-start-seata-server" class="hash-link" aria-label="Direct link to Step 4: Start Seata-Server" title="Direct link to Step 4: Start Seata-Server">​</a></h3><ul><li>Download server <a href="https://github.com/apache/incubator-seata/releases" target="_blank" rel="noopener noreferrer">package</a>, unzip it.</li><li>Start Seata-Server</li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> seata-server.sh </span><span class="token variable" style="color:#36acaa">$LISTEN_PORT</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$PATH_FOR_PERSISTENT_DATA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">e.g.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sh</span><span class="token plain"> seata-server.sh </span><span class="token number" style="color:#36acaa">8091</span><span class="token plain"> /home/admin/seata/data/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-5-run-example">Step 5: Run example<a href="#step-5-run-example" class="hash-link" aria-label="Direct link to Step 5: Run example" title="Direct link to Step 5: Run example">​</a></h3><ul><li>Start AccountService (<a href="https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboAccountServiceStarter.java" target="_blank" rel="noopener noreferrer">DubboAccountServiceStarter</a>).</li><li>Start StorageService (<a href="https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboStorageServiceStarter.java" target="_blank" rel="noopener noreferrer">DubboStorageServiceStarter</a>).</li><li>Start OrderService (<a href="https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboOrderServiceStarter.java" target="_blank" rel="noopener noreferrer">DubboOrderServiceStarter</a>).</li><li>Run BusinessService for test (<a href="https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboBusinessTester.java" target="_blank" rel="noopener noreferrer">DubboBusinessTester</a>).</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="related-projects">Related projects<a href="#related-projects" class="hash-link" aria-label="Direct link to Related projects" title="Direct link to Related projects">​</a></h3><ul><li>seata:          <a href="https://github.com/apache/incubator-seata/" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-seata/</a></li><li>seata-samples : <a href="https://github.com/apache/incubator-seata-samples" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-seata-samples</a></li></ul>]]></content>
        <author>
            <name>slievrly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MT mode]]></title>
        <id>https://seata.io/blog/manual-transaction-mode</id>
        <link href="https://seata.io/blog/manual-transaction-mode"/>
        <updated>2019-02-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[introduce MT mode]]></summary>
        <content type="html"><![CDATA[<p>Review the description in the overview: a distributed global transaction, the whole is a model of <strong>the two-phase commit</strong>. A global transaction consists of several branch transactions that meet the model requirements of <strong>the two-phase commit</strong>, which requires each branch transaction to have its own:</p><ul><li>One phase prepare behavior</li><li>Two phase commit or rollback behavior</li></ul><p><img loading="lazy" src="https://upload-images.jianshu.io/upload_images/4420767-e48f0284a037d1df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Overview of a global transaction" class="img_ev3q"></p><p>According to the two phase behavior pattern，We divide the branch transaction into <strong>Automatic (Branch) Transaction Mode</strong> and <strong>Manual (Branch) Transaction Mode</strong>.</p><p>The AT mode is based on the <strong>Relational Database</strong> that <strong>supports local ACID transactions</strong>：</p><ul><li>One phase prepare behavior: In the local transaction, the business data update and the corresponding rollback log record are submitted together.</li><li>Two phase commit behavior: Immediately ended successfully, <strong>Auto</strong> asynchronous batch cleanup of the rollback log.</li><li>Two phase rollback behavior: By rolling back the log, <strong>automatic</strong> generates a compensation operation to complete the data rollback.</li></ul><p>Accordingly, the MT mode does not rely on transaction support for the underlying data resources:</p><ul><li>One phase prepare behavior: Call the prepare logic of <strong>custom</strong> .</li><li>Two phase commit behavior:Call the commit logic of <strong>custom</strong> .</li><li>Two phase rollback behavior:Call the rollback logic of <strong>custom</strong> .</li></ul><p>The so-called MT mode refers to the support of the branch transaction of <strong>custom</strong> into the management of global transactions.</p>]]></content>
        <author>
            <name>kmmshmily</name>
        </author>
    </entry>
</feed>