"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[71240],{23902:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=n(74848),t=n(28453);const r={hidden:!0,title:"Seata High Availability Deployment Practice",keywords:["kubernetes","ops"],description:"Seata High Availability Deployment Practice",author:"helloworlde",date:new Date("2020-04-10T00:00:00.000Z")},i="Seata High Availability Deployment Practices",o={permalink:"/blog/seata-ha-practice",editUrl:"https://github.com/apache/incubator-seata-website/blob/docusaurus/i18n/en/docusaurus-plugin-content-blog/seata-ha-practice.md",source:"@site/i18n/en/docusaurus-plugin-content-blog/seata-ha-practice.md",title:"Seata High Availability Deployment Practice",description:"Seata High Availability Deployment Practice",date:"2020-04-10T00:00:00.000Z",formattedDate:"April 10, 2020",tags:[],readingTime:6.06,hasTruncateMarker:!1,authors:[{name:"helloworlde"}],frontMatter:{hidden:!0,title:"Seata High Availability Deployment Practice",keywords:["kubernetes","ops"],description:"Seata High Availability Deployment Practice",author:"helloworlde",date:"2020-04-10T00:00:00.000Z"},unlisted:!1,prevItem:{title:"Seata Quick Start",permalink:"/blog/seata-quick-start"},nextItem:{title:"Seata Config Module Source Code Analysis",permalink:"/blog/seata-analysis-config-modular"}},c={authorsImageUrls:[void 0]},l=[{value:"Preparation",id:"preparation",level:2},{value:"Deploying seata-server",id:"deploying-seata-server",level:2},{value:"Deploying seata-server to Kubernetes",id:"deploying-seata-server-to-kubernetes",level:3},{value:"Deploying the business service",id:"deploying-the-business-service",level:2},{value:"Test",id:"test",level:2},{value:"Test Success Scenario",id:"test-success-scenario",level:3},{value:"Test failure scenario",id:"test-failure-scenario",level:3}];function d(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:["To make Seata highly available using a configuration centre and database, take Nacos and MySQL as an example and deploy the [cloud-seata-nacos](",(0,s.jsx)(a.a,{href:"https://github.com/helloworlde/spring-cloud-alibaba-component/blob/",children:"https://github.com/helloworlde/spring-cloud-alibaba-component/blob/"})," master/cloud-seata-nacos/) application to a Kubernetes cluster."]}),"\n",(0,s.jsx)(a.p,{children:"The application uses Nacos as the configuration and registration centre, and has three services: order-service, pay-service, and storage-service. The order-service provides an interface for placing an order, and when the balance and inventory are sufficient, the order succeeds and a transaction is submitted; when they are insufficient, an exception is thrown, the order fails, and the transaction is rolled back. Rollback transaction"}),"\n",(0,s.jsx)(a.h2,{id:"preparation",children:"Preparation"}),"\n",(0,s.jsx)(a.p,{children:"You need to prepare available registry, configuration centre Nacos and MySQL, usually, the registry, configuration centre and database are already available and do not need special configuration, in this practice, for simplicity, only deploy a stand-alone registry, configuration centre and database, assuming they are reliable"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Deploying Nacos"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Deploy Nacos on a server with port 8848 open for seata-server registration at ",(0,s.jsx)(a.code,{children:"192.168.199.2"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"docker run --name nacos -p 8848:8848 -e MODE=standalone nacos/nacos-server\n"})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Deploying MySQL"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Deploy a MySQL database to hold transaction data at ",(0,s.jsx)(a.code,{children:"192.168.199.2"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"docker run --name mysql -p 30060:3306-e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7.17\n"})}),"\n",(0,s.jsx)(a.h2,{id:"deploying-seata-server",children:"Deploying seata-server"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Create the tables needed for seata-server."}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Refer to ",(0,s.jsx)(a.a,{href:"https://github.com/apache/incubator-seata/tree/develop/script/server/db",children:"script/server/db"})," for the exact SQL, here we are using MySQL's script and the database name is ",(0,s.jsx)(a.code,{children:"seata"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:["You also need to create the undo_log table, see ",(0,s.jsx)(a.a,{href:"https://github.com/apache/incubator-seata/blob/develop/script/client/at/db/",children:"script/client/at/db/"}),"."]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Modify the seata-server configuration"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Add the following configuration to the Nacos Configuration Centre, as described in ",(0,s.jsx)(a.a,{href:"https://github.com/apache/incubator-seata/tree/develop/script/config-center",children:"script/config-center"})]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"service.vgroupMapping.my_test_tx_group=default\nstore.mode=db\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.\nstore.db.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=true\nstore.db.user=root\nstore.db.password=123456\n"})}),"\n",(0,s.jsx)(a.h3,{id:"deploying-seata-server-to-kubernetes",children:"Deploying seata-server to Kubernetes"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"seata-server.yaml"}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"You need to change the ConfigMap's Registry and Configuration Centre addresses to the appropriate addresses"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Service\nmetadata: name: seata-ha-server.yaml\n name: seata-ha-server\n namespace: default\n labels: app.kubernetes.io/name: seata-ha-server\n   app.kubernetes.io/name: seata-ha-server\nspec.\n type: ClusterIP\n spec: type: ClusterIP\n   - port: 8091\n     protocol: TCP\n     name: http\n selector: app.kubernetes.io/name: seata-ha-server\n   app.kubernetes.io/name: seata-ha-server\n\n---apiVersion: apps/v1\n\napiVersion: apps/v1\nkind: StatefulSet\nmetadata.\n name: seata-ha-server\n namespace: default\n labels: app.kubernetes.io/name: seata-ha-server\n   app.kubernetes.io/name: seata-ha-server\nspec: serviceName: seata-ha-server\n serviceName: seata-ha-server\n replicas: 3\n selector: seata-ha-server\n   matchLabels.\n     app.kubernetes.io/name: seata-ha-server\n template: seata-ha-server\n   metadata.\n     labels: app.kubernetes.io/name: seata-ha-server\n       app.kubernetes.io/name: seata-ha-server\n   spec.\n     containers: name: seata-ha-server\n       - name: seata-ha-server\n         image: docker.io/seataio/seata-server:latest\n         imagePullPolicy: IfNotPresent\n         env: name: SEATA_CONFIG\n           - name: SEATA_CONFIG_NAME\n             value: file:/root/seata-config/registry\n         ports: name: http\n           - name: http\n             containerPort: 8091\n             protocol: TCP\n         volumeMounts: name: seata-config\n           - name: seata-config\n             mountPath: /root/seata-config\n     volumes: name: seata-config mountPath: /root/seata-config\n       - name: seata-config\n         configMap: name: seata-ha-server-config\n           name: seata-ha-server-config\n\n\n---apiVersion: v1\napiVersion: v1\nkind: ConfigMap\napiVersion: v1 kind: ConfigMap\n name: seata-ha-server-config\ndata: name: seata-ha-server-config\n registry.conf: |\n   registry {\n       type = "nacos"\n       nacos {\n         application = "seata-server"\n         serverAddr = "192.168.199.2"\n       }\n   }\n   config {\n     type = "nacos"\n     nacos {\n       serverAddr = "192.168.199.2"\n       group = "SEATA_GROUP"\n     }\n   }\n'})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Deployment"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubectl apply -f seata-server.yaml\n"})}),"\n",(0,s.jsx)(a.p,{children:"When the deployment is complete, there will be three pods"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubectl get pod | grep seata-ha-server\n\nseata-ha-server-645844b8b6-9qh5j 1/1 Running 0 3m14s\nseata-ha-server-645844b8b6-pzczs 1/1 Running 0 3m14s\nseata-ha-server-645844b8b6-wkpw8 1/1 Running 0 3m14s\n"})}),"\n",(0,s.jsx)(a.p,{children:"After the startup is complete, you can find three instances of seata-server in the Nacos service list, so you have completed the highly available deployment of seata-server."}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Viewing the service logs"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubelet logs -f seata-ha-server-645844b8b6-9qh5j\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"[0.012s][info ][gc] Using Serial\n2020-04-15 00:55:09.880 INFO [main]io.seata.server.ParameterParser.init:90 -The server is running in container.\n2020-04-15 00:55:10.013 INFO [main]io.seata.config.FileConfiguration.<init>:110 -The configuration file used is file:/root/seata- config/registry.conf\n2020-04-15 00:55:12.426 INFO [main]com.alibaba.druid.pool.DruidDataSource.init:947 -{dataSource-1} inited\n2020-04-15 00:55:13.127 INFO [main]io.seata.core.rpc.netty.RpcServerBootstrap.start:155 -Server started\n"})}),"\n",(0,s.jsxs)(a.p,{children:["where ",(0,s.jsx)(a.code,{children:"{dataSource-1} "})," indicates that the database is used and initialised properly"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Looking at the registry, there are three instances of the seata-serve service at this point"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8316).A+"",children:"seata-ha-nacos-list.png"})]}),"\n",(0,s.jsx)(a.h2,{id:"deploying-the-business-service",children:"Deploying the business service"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Create business tables and initialise data"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["You can refer to [cloud-seata-nacos/README.md](",(0,s.jsx)(a.a,{href:"https://github.com/helloworlde/spring-cloud-alibaba-component/blob/master/cloud-seata-",children:"https://github.com/helloworlde/spring-cloud-alibaba-component/blob/master/cloud-seata-"})," nacos/README.md)."]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Adding Nacos Configuration"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Under the public namespace, create the configurations with data-id ",(0,s.jsx)(a.code,{children:"order-service.properties"}),", ",(0,s.jsx)(a.code,{children:"pay-service.properties"}),", ",(0,s.jsx)(a.code,{children:"storage-service.properties"}),", with the same content. password"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"# MySQL\nspring.datasource.url=jdbc:mysql://192.168.199.2:30060/seata?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true &useSSL=false\nspring.datasource.username=root\nspring.datasource.password=123456\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.\n# Seata\nspring.cloud.alibaba.seata.tx-service-group=my_test_tx_group\n"})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Deploying the Service"}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Deploy the service via the application.yaml configuration file, and note that you need to change the ",(0,s.jsx)(a.code,{children:"NACOS_ADDR"})," of the ConfigMap to your Nacos address."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Service\nmetadata: namespace: default\n namespace: default\n name: seata-ha-service\n labels: app.kubernetes.io/name: seata-ha-service\n   app.kubernetes.io/name: seata-ha-service\nspec.\n type: NodePort\n spec: type: NodePort\n   - nodePort: 30081\n     nodePort: 30081\n     protocol: TCP\n     name: http\n selector: app.kubernetes.io/name: seata-ha-service\n   app.kubernetes.io/name: seata-ha-service\n\n---\napiVersion: v1\nkind: ConfigMap\nmetadata: name: seata-ha-service-config\n name: seata-ha-service-config\ndata: NACOS_ADDR: 192.168.199.2:8848\n NACOS_ADDR: 192.168.199.2:8848\n\n---apiVersion: v1\napiVersion: v1\nkind: ServiceAccount\nmetadata: name: seata-ha-account\n name: seata-ha-account\n namespace: default\n\n---apiVersion: rbac.authorisation.k8s.io/v1beta1\napiVersion: rbac.authorisation.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata: name: seata-ha-account\n name: seata-ha-account\nroleRef.\n apiGroup: rbac.authorisation.k8s.io/v1beta1 kind: ClusterRoleBinding\n roleRef: apiGroup: rbac.authorisation.k8s.io\n name: cluster-admin\nsubjects.\n - kind: ServiceAccount\n   name: seata-ha-account\n   namespace: default\n\n---\napiVersion: apps/v1\nkind: Deployment\nnamespace: default --- --- apiVersion: apps/v1 kind: Deployment\n namespace: default\n name: seata-ha-service\n labels: app.kubernetes.io/name: seata-ha-service\n   app.kubernetes.io/name: seata-ha-service\nspec: replicas: 1\n replicas: 1\n selector.\n   matchLabels: app.kubernetes.io/name: seata-ha-service\n     app.kubernetes.io/name: seata-ha-service\n template: seata-ha-service\n   metadata: seata-ha-service template.\n     labels: app.kubernetes.io/name: seata-ha-service\n       app.kubernetes.io/name: seata-ha-service\n   spec: serviceAccountName: seata-ha-service\n     serviceAccountName: seata-ha-account\n     containers: name: seata-ha-order\n       - name: seata-ha-order-service\n         image: "registry.cn-qingdao.aliyuncs.com/hellowoodes/seata-ha-order-service:1.1"\n         imagePullPolicy: IfNotPresent\n         imagePullPolicy: IfNotPresent\n           - name: NACOS_ADDR\n             valueFrom.\n               configMapKeyRef.\n                 key: NACOS_ADDR\n                 name: seata-ha-service-config\n         name: seata-ha-service-config\n           - name: http\n             containerPort: 8081\n             protocol: TCP\n       - name: seata-ha-pay-service\n         image: "registry.cn-qingdao.aliyuncs.com/hellowoodes/seata-ha-pay-service:1.1"\n         imagePullPolicy: IfNotPresent\n         env.\n           - name: NACOS_ADDR\n             valueFrom.\n               configMapKeyRef.\n                 key: NACOS_ADDR\n                 name: seata-ha-service-config\n         name: seata-ha-service-config\n           - name: http\n             containerPort: 8082\n             protocol: TCP\n       - name: seata-ha-storage-service\n         image: "registry.cn-qingdao.aliyuncs.com/hellowoodes/seata-ha-storage-service:1.1"\n         imagePullPolicy: IfNotPresent\n         env.\n           - name: NACOS_ADDR\n             valueFrom.\n               NACOS_ADDR valueFrom: NACOS_ADDR valueFrom: NACOS_ADDR valueFrom.\n                 key: NACOS_ADDR\n                 name: seata-ha-service-config\n         name: seata-ha-service-config\n           - name: http\n             containerPort: 8083\n             protocol: TCP\n'})}),"\n",(0,s.jsx)(a.p,{children:"Deploy the application to the cluster with the following command"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubectl apply -f application.yaml\n"})}),"\n",(0,s.jsx)(a.p,{children:"Then look at the pods that were created, there are three pods under the seata-ha-service service"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubectl get pod | grep seata-ha-service\n\nseata-ha-service-7dbdc6894b-5r8q4 3/3 Running 0 12m\n"})}),"\n",(0,s.jsx)(a.p,{children:"Once the application is up and running, in the Nacos service list, there will be the corresponding service"}),"\n",(0,s.jsxs)(a.p,{children:["! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(52911).A+"",children:"seata-ha-service-list.png"})]}),"\n",(0,s.jsx)(a.p,{children:"At this point, if you look at the service's logs, you will see that the service has registered with each of the TC's"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubectl logs -f seata-ha-service-7dbdc6894b-5r8q4 seata-ha-order-service\n"})}),"\n",(0,s.jsxs)(a.p,{children:["! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(58268).A+"",children:"seata-ha-service-register.png"})]}),"\n",(0,s.jsx)(a.p,{children:"Looking at any TC log, you'll see that each service is registered with the TC"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"kubelet logs -f seata-ha-server-645844b8b6-9qh5j\n"})}),"\n",(0,s.jsxs)(a.p,{children:["! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(17562).A+"",children:"seata-ha-tc-register.png"})]}),"\n",(0,s.jsx)(a.h2,{id:"test",children:"Test"}),"\n",(0,s.jsx)(a.h3,{id:"test-success-scenario",children:"Test Success Scenario"}),"\n",(0,s.jsx)(a.p,{children:"Call the order interface, set the price to 1, because the initial balance is 10, and the order is placed successfully."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:'curl -X POST \\\nhttp://192.168.199.2:30081/order/placeOrder \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n"userId": 1,\n"productId": 1,\n"price": 1\n}\'\n'})}),"\n",(0,s.jsx)(a.p,{children:"At this point the return result is:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-json",children:'{"success":true, "message":null, "data":null}\n'})}),"\n",(0,s.jsx)(a.p,{children:"Checking the TC logs, the transaction was successfully committed:"}),"\n",(0,s.jsxs)(a.p,{children:["! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(30984).A+"",children:"seata-ha-commit-tc-success.png"})]}),"\n",(0,s.jsxs)(a.p,{children:["View the order-service service log\n! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(11578).A+"",children:"seata-ha-commit-success.png"})]}),"\n",(0,s.jsx)(a.h3,{id:"test-failure-scenario",children:"Test failure scenario"}),"\n",(0,s.jsx)(a.p,{children:"If you set the price to 100 and the balance is not enough, the order fails and throws an exception, and the transaction is rolled back."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:'curl -X POST \\\nhttp://192.168.199.2:30081/order/placeOrder \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n"userId": 1,\n"productId": 1,\n"price": 100\n}\'\n'})}),"\n",(0,s.jsxs)(a.p,{children:["View the logs for TC:\n! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(92089).A+"",children:"seata-ha-commit-tc-rollback.png"})]}),"\n",(0,s.jsxs)(a.p,{children:["View the logs of the service :\n! ",(0,s.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(38951).A+"",children:"seata-ha-commit-service-rollback.png"})]}),"\n",(0,s.jsx)(a.p,{children:"Multiple calls to view the service logs reveal that transaction registration is randomly initiated to one of the T Cs, and when capacity is expanded or scaled down, the corresponding TC participates or withdraws, proving that the high availability deployment is in effect."})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},38951:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-commit-service-rollback-04f600853ea2bb6e6780579d4d092ba5.png"},11578:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-commit-service-success-6e7a84881ebffa04b9a79fe9f784b872.png"},92089:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-commit-tc-rollback-fd88073e7ebdb2d2537880257fd5aeaf.png"},30984:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-commit-tc-success-d5017d503959370afdcda04a1ff5dfb7.png"},8316:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-nacos-list-ae9a4b1039d45635720aa5e10d3adb22.png"},52911:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-service-list-4de3a26b9eb022aad4c663b338003ddf.png"},58268:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-service-register-ae840566257c4c3e0c377bc6f0c8e931.png"},17562:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/files/seata-ha-tc-register-af7ee7fcdb6f59c11d68a4ab73c7d8a8.png"},28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>o});var s=n(96540);const t={},r=s.createContext(t);function i(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);