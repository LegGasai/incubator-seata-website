"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[86259],{6986:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>T,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=a(74848),r=a(28453);const i={title:"Docker Deployment of Seata Integration with Nacos",keywords:["Seata","Nacos","distributed transaction"],description:"This article explains how to deploy Seata integrated with Nacos configuration using Docker.",author:"FUNKYE",date:"2019/12/03"},o="Docker Deployment Seata with Nacos Integration",s={permalink:"/blog/seata-nacos-docker",editUrl:"https://github.com/apache/incubator-seata-website/blob/docusaurus/i18n/en/docusaurus-plugin-content-blog/seata-nacos-docker.md",source:"@site/i18n/en/docusaurus-plugin-content-blog/seata-nacos-docker.md",title:"Docker Deployment of Seata Integration with Nacos",description:"This article explains how to deploy Seata integrated with Nacos configuration using Docker.",date:"2019-12-03T00:00:00.000Z",formattedDate:"December 3, 2019",tags:[],readingTime:12.13,hasTruncateMarker:!1,authors:[{name:"FUNKYE"}],frontMatter:{title:"Docker Deployment of Seata Integration with Nacos",keywords:["Seata","Nacos","distributed transaction"],description:"This article explains how to deploy Seata integrated with Nacos configuration using Docker.",author:"FUNKYE",date:"2019/12/03"},unlisted:!1,prevItem:{title:"Seata Configuration Center Implementation Principles",permalink:"/blog/seata-config-center"},nextItem:{title:"Configuring Seata Distributed Transaction with Nacos as the Configuration Center",permalink:"/blog/seata-nacos-analysis"}},c={authorsImageUrls:[void 0]},d=[{value:"Preparation",id:"preparation",level:2},{value:"Seata Configuration",id:"seata-configuration",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["Running the demo used ",(0,t.jsx)(e.a,{href:"https://gitee.com/itCjb/springboot-dubbo-mybatisplus-seata",children:"project address"})]}),"\n",(0,t.jsx)(e.p,{children:"Author: FUNKYE (Chen Jianbin), Hangzhou, an Internet company main program."}),"\n",(0,t.jsx)(e.h1,{id:"preface",children:"Preface"}),"\n",(0,t.jsxs)(e.p,{children:["Seata configuration for direct connection ",(0,t.jsx)(e.a,{href:"/blog/springboot-dubbo-mybatisplus-seata/",children:"blog"})]}),"\n",(0,t.jsxs)(e.p,{children:["Seata Integration with Nacos Configuration ",(0,t.jsx)(e.a,{href:"/blog/seata-nacos-analysis/",children:"blog"})]}),"\n",(0,t.jsx)(e.p,{children:"Let's go back to the basics of the previous posts to configure nacos as a configuration centre and dubbo registry."}),"\n",(0,t.jsx)(e.h2,{id:"preparation",children:"Preparation"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Install docker"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-shell",children:"yum -y install docker\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"Create the nacos and seata databases."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mysql",children:"/******************************************/\n/* Full database name = nacos */\n/* Table name = config_info */\n/******************************************/\nCREATE TABLE `config_info` (\n `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id', `data_id` v\n `data_id` varchar(255) NOT NULL COMMENT 'data_id', `group_id` varchar(255) AUTO_INCREMENT COMMENT\n `group_id` varchar(255) DEFAULT NULL, `content` longtext NOT NULL\n `content` longtext NOT NULL COMMENT 'content', `md5` varchar(255)\n `md5` varchar(32) DEFAULT NULL COMMENT 'md5', `gmt_create` longtext NOT NULL COMMENT\n `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Creation time',\n `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Modified', `src_user` datetime NOT NULL\n `src_user` text COMMENT 'source user',\n `src_ip` varchar(20) DEFAULT NULL COMMENT 'source ip', `app_name` varchar(20) DEFAULT NULL COMMENT '2010-05-05 00:00:00' COMMENT\n `app_name` varchar(128) DEFAULT NULL, `tenant_id` varchar(20)\n `tenant_id` varchar(128) DEFAULT '' COMMENT 'tenant field',\n `c_desc` varchar(256) DEFAULT NULL,\n `c_use` varchar(64) DEFAULT NULL, `c_desc` varchar(256) DEFAULT\n `effect` varchar(64) DEFAULT NULL,\n `type` varchar(64) DEFAULT NULL,\n `c_schema` text, `c_schema` text, `c_schema` text\n PRIMARY KEY (`id`),\n UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='config_info';\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = config_info_aggr */\n/******************************************/\nCREATE TABLE `config_info_aggr` (\n `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',\n `data_id` varchar(255) NOT NULL COMMENT 'data_id', `group_id` varchar(255) AUTO_INCREMENT COMMENT\n `group_id` varchar(255) NOT NULL COMMENT 'group_id', `datum_id` varchar(255) NOT NULL COMMENT\n `datum_id` varchar(255) NOT NULL COMMENT 'datum_id', `content` longtext NOT NULL COMMENT 'data_id', `group_id` varchar(255)\n `content` longtext NOT NULL COMMENT '\u5185\u5bb9',\n `gmt_modified` datetime NOT NULL COMMENT 'modification time', `app_name` varchar(255) NOT NULL COMMENT\n `app_name` varchar(128) DEFAULT NULL, `tenant_id` varchar(128) COMMENT\n `tenant_id` varchar(128) DEFAULT '' COMMENT 'Tenant field',\n PRIMARY KEY (`id`),\n UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Add tenant field';\n\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = config_info_beta */\n/******************************************/\nCREATE TABLE `config_info_beta` (\n `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',\n `data_id` varchar(255) NOT NULL COMMENT 'data_id', `group_id` varchar(255) AUTO_INCREMENT COMMENT\n `group_id` varchar(128) NOT NULL COMMENT 'group_id', `app_name` varchar(255) NOT NULL COMMENT\n `app_name` varchar(128) DEFAULT NULL COMMENT 'app_name', `content` longtext NOT NULL\n `content` longtext NOT NULL COMMENT 'content', `beta_ips` varchar(128)\n `beta_ips` varchar(1024) DEFAULT NULL COMMENT 'betaIps', `md5` varchar(1024) DEFAULT NULL COMMENT\n `md5` varchar(32) DEFAULT NULL COMMENT 'md5', `gmt_create` varchar(1024) DEFAULT NULL COMMENT\n `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Creation Time',\n `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Modified', `src_user` datetime NOT NULL\n `src_user` text COMMENT 'source user',\n `src_ip` varchar(20) DEFAULT NULL COMMENT 'source ip', `tenant_id` varchar(20) DEFAULT NULL COMMENT '2010-05-05 00:00:00' COMMENT\n `tenant_id` varchar(128) DEFAULT '' COMMENT 'tenant field',\n PRIMARY KEY (`id`),\n UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='config_info_beta';\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = config_info_tag */\n/******************************************/\nCREATE TABLE `config_info_tag` (\n `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',\n `data_id` varchar(255) NOT NULL COMMENT 'data_id', `group_id` varchar(255) AUTO_INCREMENT COMMENT\n `group_id` varchar(128) NOT NULL COMMENT 'group_id', `tenant_id` varchar(255) NOT NULL COMMENT\n `tenant_id` varchar(128) DEFAULT '' COMMENT 'tenant_id', `tag_id` varchar(128) DEFAULT\n `tag_id` varchar(128) NOT NULL COMMENT 'tag_id', `app_name` varchar(128) DEFAULT '' COMMENT\n `app_name` varchar(128) DEFAULT NULL COMMENT 'app_name',\n `content` longtext NOT NULL COMMENT 'content', `md5` varchar(128) DEFAULT NULL COMMENT\n `md5` varchar(32) DEFAULT NULL COMMENT 'md5', `gmt_create\n `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Creation time',\n `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Modified', `src_user` datetime NOT NULL\n `src_user` text COMMENT 'source user',\n `src_ip` varchar(20) DEFAULT NULL COMMENT 'source ip', `src_user` text COMMENT\n PRIMARY KEY (`id`), UNIQUE KEY `src_ip` varchar(20)\n UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='config_info_tag';\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = config_tags_relation */\n/******************************************/\nCREATE TABLE `config_tags_relation` (\n `id` bigint(20) NOT NULL COMMENT 'id', `tag_name` v\n `tag_name` varchar(128) NOT NULL COMMENT 'tag_name', `tag_type` varchar(20) NOT NULL COMMENT\n `tag_type` varchar(64) DEFAULT NULL COMMENT 'tag_type',\n `data_id` varchar(255) NOT NULL COMMENT 'data_id', `group_id` varchar(255) DEFAULT COMMENT\n `group_id` varchar(128) NOT NULL COMMENT 'group_id', `tenant_id` varchar(255) NOT NULL COMMENT\n `tenant_id` varchar(128) DEFAULT '' COMMENT 'tenant_id', `nid` bigint(128) NOT NULL COMMENT\n `nid` bigint(20) NOT NULL AUTO_INCREMENT,\n PRIMARY KEY (`nid`),\n UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),\n KEY `idx_tenant_id` (`tenant_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='config_tag_relation';\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = group_capacity */\n/******************************************/\nCREATE TABLE `group_capacity` (\n `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key ID',\n `group_id` varchar(128) NOT NULL DEFAULT '' COMMENT 'Group ID, null character indicates entire cluster', `quota` int(10)\n `quota` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Quota, a 0 indicates that the default value is being used',\n `usage` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Usage',\n `max_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Individual configuration size limit in bytes, 0 means use the default',\n `max_aggr_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Maximum number of aggregate subconfigurations,, 0 means use default',, `max_aggr_count` int(10) unsigned NOT NULL DEFAULT '0'\n `max_aggr_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Maximum subconfiguration size in bytes for a single aggregated data,, 0 means use default',, `max_history_size` int(10) unsigned NOT NULL DEFAULT '0'\n `max_history_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Maximum number of change history counts',\n `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Creation Time',\n `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Modified time',\n PRIMARY KEY (`id`),\n UNIQUE KEY `uk_group_id` (`group_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Cluster, Capacity Information Table by Group';\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = his_config_info */\n/******************************************/\nCREATE TABLE `his_config_info` (\n `id` bigint(64) unsigned NOT NULL, `nid` bigint(64) unsigned NOT NULL, `his_config_info\n `nid` bigint(20) unsigned NOT NULL AUTO_INCREMENT, `data_id` v\n `data_id` varchar(255) NOT NULL, `group_id` varchar(255) NOT NULL, `group_id` varchar(255) NOT NULL, `group_id` varchar(255) NOT NULL\n `group_id` varchar(128) NOT NULL, `app_name` varchar(255)\n `app_name` varchar(128) DEFAULT NULL COMMENT 'app_name',\n `content` longtext NOT NULL, `md5` varchar(128) DEFAULT NULL\n `md5` varchar(32) DEFAULT NULL, `gmt_create\n `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',\n `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00', `src_user` datetime NOT NULL\n `src_user` text, `src_ip` datetime NOT NULL\n `src_ip` varchar(20) DEFAULT NULL, `op_type` char(20) DEFAULT\n `op_type` char(10) DEFAULT NULL, `tenant_id` varchar(20)\n `tenant_id` varchar(128) DEFAULT '' COMMENT 'Tenant field',\n PRIMARY KEY (`nid`),\n KEY `idx_gmt_create` (`gmt_create`),\n KEY `idx_gmt_modified` (`gmt_modified`),\n KEY `idx_did` (`data_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Multi-Tenant Transformation';\n\n\n/******************************************/\n/* Full database name = nacos_config */\n/* Table name = tenant_capacity */\n/******************************************/\nCREATE TABLE `tenant_capacity` (\n `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key ID', `tenant_id` v\n `tenant_id` varchar(128) NOT NULL DEFAULT '' COMMENT 'Tenant ID',\n `quota` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Quota, 0 means use the default value',\n `usage` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Usage',\n `max_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Individual configuration size limit in bytes, 0 means use the default',\n `max_aggr_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Maximum number of aggregated sub-configurations',\n `max_aggr_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Maximum subconfiguration size in bytes for a single aggregation data, 0 means use default',\n `max_history_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Maximum number of change history counts',\n `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Creation time',\n `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT 'Modified time',\n PRIMARY KEY (`id`),\n UNIQUE KEY `uk_tenant_id` (`tenant_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Tenant capacity information table';\n\n\nCREATE TABLE `tenant_info` (\n `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',\n `kp` varchar(128) NOT NULL COMMENT 'kp', `tenant_id` varchar(20) AUTO_INCREMENT COMMENT\n `tenant_id` varchar(128) default '' COMMENT 'tenant_id',\n `tenant_name` varchar(128) default '' COMMENT 'tenant_name',\n `tenant_desc` varchar(256) DEFAULT NULL COMMENT 'tenant_desc', `create_source` varchar(256)\n `create_source` varchar(32) DEFAULT NULL COMMENT 'create_source', `gmt_create` varchar(256) DEFAULT NULL COMMENT\n `gmt_create` bigint(20) NOT NULL COMMENT 'create_time', `gmt_modify` varchar(32) DEFAULT NULL COMMENT\n `gmt_modified` bigint(20) NOT NULL COMMENT 'modified_time', `gmt_modified` bigint(20) NOT NULL COMMENT\n PRIMARY KEY (`id`),\n UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),\n KEY `idx_tenant_id` (`tenant_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='tenant_info';\n\nCREATE TABLE users (\n username varchar(50) NOT NULL PRIMARY KEY, password varchar(500) NOT NULL\n password varchar(500) NOT NULL,\n enabled boolean NOT NULL\nNULL, enabled boolean NOT NULL ); CREATE TABLE users\n\nCREATE TABLE roles (\n username varchar(50) NOT NULL, role varchar(50) NOT NULL, enabled boolean NOT NULL ); CREATE TABLE\n role varchar(50) NOT NULL\n); INSERT INTO users (username varchar(50) NOT NULL, role varchar(50) NOT NULL ); CREATE TABLE\n\nINSERT INTO users (username, password, enabled) VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', TRUE);; CREATE TABLE roles ( username, role)\n\nINSERT INTO roles (username, role) VALUES ('nacos', 'ROLE_ADMIN');\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-mysql",children:"-- the table to store GlobalSession data\nCREATE TABLE IF NOT EXISTS `global_table`\n(\n   `xid` VARCHAR(128) NOT NULL, `transaction_id` BARCHAR(128)\n   `transaction_id` BIGINT, `status` TINYL\n   `status`                    TINYINT      NOT NULL,\n   `application_id` VARCHAR(32), `transaction_service\n   `transaction_service_group` VARCHAR(32),\n   `transaction_name` VARCHAR(128),\n   `timeout`                   INT,\n   `begin_time`                BIGINT,\n   `application_data` VARCHAR(2000), `gmt_create\n   `gmt_create`                DATETIME,\n   `gmt_modified`              DATETIME,\n   PRIMARY KEY (`xid`),\n   KEY `idx_gmt_modified_status` (`gmt_modified`, `status`),\n   KEY `idx_transaction_id` (`transaction_id`)\n) ENGINE = InnoDB\n DEFAULT CHARSET = utf8.\n\n-- the table to store BranchSession data\nCREATE TABLE IF NOT EXISTS `branch_table`\n(\n   `branch_id` BIGINT NOT NULL, `xid` VARCHARGE\n   `xid`               VARCHAR(128) NOT NULL,\n   `transaction_id`    BIGINT,\n   `resource_group_id` VARCHAR(32), `resource_id` VARCHAR(32), `transaction_id` BIGINT\n   `resource_id`       VARCHAR(256),\n   `branch_type` VARCHAR(8), `status` TINYINT\n   `status`            TINYINT,\n   `client_id` VARCHAR(64), `application_data` TINYINT, `client_id` VARCHAR(64), `application_data` TINYINT\n   `application_data` VARCHAR(2000), `gmt_create\n   `gmt_create`        DATETIME(6),\n   `gmt_modified`      DATETIME(6),\n   PRIMARY KEY (`branch_id`), `branch_id`, `idx_x\n   KEY `idx_xid` (`xid`)\n) ENGINE = InnoDB\n DEFAULT CHARSET = utf8; -- the table to store lock data.\n\n-- the table to store lock data\nCREATE TABLE IF NOT EXISTS `lock_table`\n(\n   `row_key` VARCHAR(128) NOT NULL, `xid` VARCHAR(128) NOT NULL, -- the table to store lock data\n   `xid`            VARCHAR(128),\n   `transaction_id` BIGINT, `branch_id` BIGINT, `branch_id` BIGINT\n   `branch_id` BIGINT NOT NULL, `resource_id` VARCHAR(128)\n   `resource_id`    VARCHAR(256),\n   `table_name`     VARCHAR(32),\n   `pk` VARCHAR(36), `gmt_create` VARCHAR(256), `gmt_create\n   `gmt_create` DATETIME, `gmt_modify` VARCHAR(256), `pk` VARCHAR(36), `gmt_create` DATETIME\n   `gmt_modified`   DATETIME,\n   PRIMARY KEY (`row_key`),\n   KEY `idx_branch_id` (`branch_id`)\n) ENGINE = InnoDB\n DEFAULT CHARSET = utf8.\n\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"Pull the nacos and seata mirrors and run them."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-shell",children:"docker run -d --name nacos -p 8848:8848 -e MODE=standalone -e MYSQL_MASTER_SERVICE_HOST=your mysql ip -e MYSQL_MASTER_SERVICE_DB_NAME=nacos -e MYSQL_MASTER_SERVICE_USER=root -e MYSQL_MASTER_SERVICE_PASSWORD=mysql password -e MYSQL_SLAVE_SERVICE_HOST=your mysql ip -e SPRING_DATASOURCE_PLATFORM=mysql PLATFORM=mysql -e MYSQL_DATABASE_NUM=1 nacos/nacos-server:latest\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-shell",children:"docker run -d --name seata -p 8091:8091 -e SEATA_IP=the ip you want to specify -e SEATA_PORT=8091 seataio/seata-server:1.4.2\n"})}),"\n",(0,t.jsx)(e.h2,{id:"seata-configuration",children:"Seata Configuration"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Since there is no built-in vim in the seata container, we can directly cp the folder to the host and then cp it to go back."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"docker cp container id:seata-server/resources The directory you want to place the folder in.\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"Get the ip addresses of the two containers using the following code"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"docker inspect --format='{{.NetworkSettings.IPAddress}}' ID/NAMES\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"nacos-config.txt is edited as follows"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"transport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableClientBatchSendRequest=false\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\nservice.vgroupMapping.Your transaction group name=default\nservice.default.grouplist=127.0.0.1:8091\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=false\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nstore.mode=file\nstore.publicKey=\nstore.file.dir=file_store/data\nstore.file.maxBranchSessionSize=16384\nstore.file.maxGlobalSessionSize=512\nstore.file.fileWriteBufferCacheSize=16384\nstore.file.flushDiskMode=async\nstore.file.sessionReloadReadSize=100\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.\nstore.db.url=jdbc:mysql://your mysql host ip:3306/seata?useUnicode=true&rewriteBatchedStatements=true\nstore.db.user=mysql account\nstore.db.password=mysql password\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nclient.undo.dataValidation=true\nclient.undo.logSerialisation=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\nlog.exceptionRate=100\ntransport.serialisation=seata\ntransport.compressor=none\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Click ",(0,t.jsx)(e.a,{href:"/docs/user/configurations/",children:"here"})," for detailed parameter configurations."]}),"\n",(0,t.jsxs)(e.ol,{start:"4",children:["\n",(0,t.jsx)(e.li,{children:"registry.conf is edited as follows"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'registry {\n# file, nacos, eureka, redis, zk, consul, etcd3, sofa\ntype = "nacos"\n\nnacos {\nserverAddr = "nacos container ip:8848"\nnamespace = ""\ncluster = "default"\n}\n}\n\nconfig {\n# file, nacos, apollo, zk, consul, etcd3\ntype = "nacos"\n\nnacos {\nserverAddr = "nacos container ip:8848"\nnamespace = ""\n}\n}\n'})}),"\n",(0,t.jsxs)(e.ol,{start:"5",children:["\n",(0,t.jsx)(e.li,{children:"After the configuration is complete, use the following command to copy the modified registry.conf to the container, and reboot to view the logs running"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-shell",children:"docker cp /home/seata/resources/registry.conf seata:seata-server/resources/\ndocker restart seata\ndocker logs -f seata\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"6",children:["\n",(0,t.jsx)(e.li,{children:"Run nacos-config.sh to import the Nacos configuration."}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"eg: sh ${SEATAPATH}/script/config-center/nacos/nacos-config.sh -h localhost -p 8848 -g SEATA_GROUP -t 5a3c7d6c-f497-4d68-a71a-2e5e3340b3ca - u username -w password u username -w password"}),"\n",(0,t.jsxs)(e.p,{children:["Refer to ",(0,t.jsx)(e.a,{href:"https://github.com/apache/incubator-seata/blob/1.4.2/script/config-center/README.md",children:"Configuration Import Instructions"})," for specific parameter definitions."]}),"\n",(0,t.jsxs)(e.ol,{start:"7",children:["\n",(0,t.jsx)(e.li,{children:"Log in to the nacos control centre to see"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["! ",(0,t.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:a(61412).A+"",children:"20191202205912"})]}),"\n",(0,t.jsx)(e.p,{children:"As shown in the picture is successful."}),"\n",(0,t.jsx)(e.h1,{id:"debugging",children:"Debugging"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Pull the project shown in the blog post and modify the application.yml and registry.conf of test-service."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'registry {\ntype = "nacos"\nnacos {\nserverAddr = "host ip:8848"\nnamespace = ""\ncluster = "default"\n}\n}\nconfig {\ntype = "nacos"\nnacos {\nserverAddr = "host ip:8848"\nnamespace = ""\ncluster = "default"\n}\n}\n\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"server.\nport: 38888\nspring.\nname: test-service\nname: test-service\ndatasource: type: com.alibaba.druid.pool.\ntype: com.alibaba.druid.pool.\nurl: jdbc:mysql://mysqlip:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC\ndriver-class-name: com.mysql.cj.jdbc.\ndriver-class-name: com.mysql.cj.jdbc.\ndriver-class-name: com.mysql.cj.jdbc.driver username: root\ndriver-class-name: com mysql.cj.jdbc.\ndriver-class-name: com mysql.cj.jdbc.\nthreadpool: cached\nscan.\nbase-packages: com.example\napplication: qos-enable: false\nqos-enable: false\nname: testserver\nregistry: id: my-registry\nid: my-registry\naddress: nacos://host ip:8848\nmybatis-plus.\nmapper-locations: classpath:/mapper/*Mapper.xml\ntypeAliasesPackage: org.test.entity\nglobal-config.\ndb-config.\nfield-strategy: not-empty\ndb-config: field-strategy: not-empty\ndb-type: mysql\nconfiguration: map-underscore-to-camel-case: true\nmap-underscore-to-camel-case: true\ncache-enabled: true\nlog-impl: org.apache.ibatis.logging.stdout.\nauto-mapping-unknown-column-behavior: none\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"Copy the modified registry.conf to test-client-resources, and modify the application"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"spring: application.\napplication: name: test\nname: test\ndatasource: driver-class-name: com.mysql.\ndriver-class-name: com.mysql.cj.jdbc.\nurl: jdbc:mysql://mysqlIp:3306/test?userSSL=true&useUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai\nusername: root\npassword: 123456\nmvc.\nservlet.\nload-on-startup: 1\nhttp.\nhttp: http: encoding: http: encoding: http: force: true\nforce: true\ncharset: utf-8\nenabled: true\nmultipart: max-file-size: 10MB\nmax-file-size: 10MB\nmax-request-size: 10MB\ndubbo.\ndubbo: registry: id: my-registry\nid: my-registry\naddress: nacos://host ip:8848\napplication.\nname: dubbo-demo-client\nqos-enable: false\nserver: name: dubbo-demo-client qos-enable: false\nport: 28888\nmax-http-header-size: 8192\naddress: 0.0.0.0\ntomcat: max-http-post-size: 104857600\nmax-http-post-size: 104857600\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"4",children:["\n",(0,t.jsx)(e.li,{children:"Execute the undo_log script on each db involved."}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE IF NOT EXISTS `undo_log`\n(\n   `branch_id` BIGINT NOT NULL COMMENT 'branch transaction id', `xid` VARCHARCHARCHARCHARCHARCHARCHARCHARCHARGE\n   `xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id', `context` VARCHAR(128) NOT NULL COMMENT\n   `context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialisation', `rollback_info` VARCHAR(128) NOT NULL COMMENT\n   `rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info', `log_status` INTRODUCTION\n   `log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defence status', `log_created` DAT\n   `log_created` DATETIME(6) NOT NULL COMMENT 'creation datetime', `log_modified` DATETIME(6) NOT NULL COMMENT\n   `log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime', `log_modified` DATETIME(6) NOT NULL COMMENT\n   UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)\n) ENGINE = InnoDB\n AUTO_INCREMENT = 1\n DEFAULT CHARSET = utf8 COMMENT ='AT transaction mode undo table';\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"5",children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Run test-service,test-client in that order."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"See if the list of services in nacos is as shown below."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["! ",(0,t.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:a(66107).A+"",children:"20191203132351"})]}),"\n",(0,t.jsx)(e.h1,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(e.p,{children:"The docker deployment of nacos and seata has been completed, for more details I would like you to visit the following address to read the detailed documentation"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://nacos.io/zh-cn/index.html",children:"nacos official website"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"http://dubbo.apache.org/en-us/",children:"dubbo official website"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://seata.apache.org/zh-cn/",children:"seata website"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://www.docker.com/",children:"docker official website"})})]})}function T(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},61412:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/files/20191202205912-4d939ad3e578e3d7997d786bc108775e.png"},66107:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/files/20191203132351-f0e45403eb1bae9896318a2af0eac585.png"},28453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>s});var t=a(96540);const r={},i=t.createContext(r);function o(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);